"use strict";

var swiper = new Swiper('.card-swiper', {
  freeMode: true,
  watchSlidesProgress: true,
  breakpoints: {
    320: {
      spaceBetween: 14,
      slidesPerView: 2.5
    },
    400: {
      spaceBetween: 14,
      slidesPerView: 3
    },
    650: {
      spaceBetween: 10,
      slidesPerView: 4
    }
  }
});
var swiper2 = new Swiper('.card-swiper2', {
  spaceBetween: 10,
  navigation: {
    nextEl: '.card-swiper-button-next',
    prevEl: '.card-swiper-button-prev'
  },
  thumbs: {
    swiper: swiper
  }
});
var swiper3 = new Swiper('.reviews-swiper', {
  navigation: {
    nextEl: '.reviews-swiper-button-next',
    prevEl: '.reviews-swiper-button-prev'
  },
  pagination: {
    el: '.swiper-pagination'
  },
  breakpoints: {
    320: {
      slidesPerView: 1
    },
    600: {
      slidesPerView: 2,
      spaceBetween: 18
    },
    768: {
      slidesPerView: 2,
      spaceBetween: 24
    },
    1000: {
      slidesPerView: 2,
      spaceBetween: 32
    }
  }
});
var swiper4 = new Swiper('.catalog-swiper', {
  loop: true,
  speed: 2000,
  autoplay: {
    delay: 1,
    disableOnInteraction: false
  },
  breakpoints: {
    320: {
      slidesPerView: 3,
      spaceBetween: 23
    },
    700: {
      slidesPerView: 5,
      spaceBetween: 26
    },
    768: {
      slidesPerView: 5,
      spaceBetween: 34
    },
    1000: {
      spaceBetween: 47,
      slidesPerView: 5
    }
  }
});
var popupLinks = document.querySelectorAll('.popup-link');
var body = document.querySelector('body');
var lockPadding = document.querySelectorAll('.lock-padding');
var unlock = true;
var timeout = 400;
if (popupLinks.length > 0) {
  var _loop = function _loop() {
    var popupLink = popupLinks[index];
    popupLink.addEventListener('click', function (e) {
      var popupName = popupLink.getAttribute('href').replace('#', '');
      var curentPopup = document.getElementById(popupName);
      popupOpen(curentPopup);
      e.preventDefault();
    });
  };
  for (var index = 0; index < popupLinks.length; index++) {
    _loop();
  }
}
var popupCloseIcon = document.querySelectorAll('.close-popup');
if (popupCloseIcon.length > 0) {
  var _loop2 = function _loop2() {
    var el = popupCloseIcon[_index];
    el.addEventListener('click', function (e) {
      popupClose(el.closest('.popup'));
      e.preventDefault();
    });
  };
  for (var _index = 0; _index < popupCloseIcon.length; _index++) {
    _loop2();
  }
}
function popupOpen(curentPopup) {
  if (curentPopup && unlock) {
    var popupActive = document.querySelector('.popup.open');
    if (popupActive) {
      popupClose(popupActive, false);
    } else {
      bodyLock();
    }
    curentPopup.classList.add('open');
    curentPopup.addEventListener('click', function (e) {
      if (!e.target.closest('.popup__content')) {
        popupClose(e.target.closest('.popup'));
      }
    });
  }
}
function popupClose(popupActive) {
  var doUnlock = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  if (unlock) {
    popupActive.classList.remove('open');
    if (doUnlock) {
      bodyUnLock();
    }
  }
}
function bodyLock() {
  var lockPaddingValue = 17;
  if (lockPadding.length > 0) {
    for (var _index2 = 0; _index2 < lockPadding.length; _index2++) {
      var el = lockPadding[_index2];
      el.style.paddingRight = lockPaddingValue;
    }
  }
  body.style.paddingRight = lockPaddingValue;
  body.classList.add('lock');
  unlock = false;
  setTimeout(function () {
    unlock = true;
  }, timeout);
}
function bodyUnLock() {
  setTimeout(function () {
    if (lockPadding.length > 0) {
      for (var _index3 = 0; _index3 < lockPadding.length; _index3++) {
        var el = lockPadding[_index3];
        el.style.paddingRight = '0px';
      }
    }
    body.style.paddingRight = '0px';
    body.classList.remove('lock');
  }, timeout);
  unlock = false;
  setTimeout(function () {
    unlock = true;
  }, timeout);
}
document.addEventListener('keydown', function (e) {
  if (e.which === 27) {
    var popupActive = document.querySelector('.popup.open');
    popupClose(popupActive);
  }
});
(function () {
  // проверяем поддержку
  if (!Element.prototype.closest) {
    // реализуем
    Element.prototype.closest = function (css) {
      var node = this;
      while (node) {
        if (node.matches(css)) return node;
        node = node.parentElement;
      }
      return null;
    };
  }
})();
(function () {
  // проверяем поддержку
  if (!Element.prototype.matches) {
    // определяем свойство
    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;
  }
})();
var mailingPopupChange = function mailingPopupChange() {
  var mailingPopup = document.querySelectorAll('.popup');
  mailingPopup.forEach(function (item) {
    var mailingRadio = item.querySelectorAll('.mailing-item');
    var mailingPopupButtonEmail = item.querySelector('.mailing-item--email');
    var mailingPopupButton = item.querySelectorAll('.mailing-item');
    var mailingPopupInput = item.querySelector('.order-email');
    var ctlgForm1 = document.querySelector('.ctlg-form1');
    var ctlgForm2 = document.querySelector('.ctlg-form2');
    var bookForm1 = document.querySelector('.book-form1');
    var bookForm2 = document.querySelector('.book-form2');
    mailingRadio.forEach(function (item1) {
      item1.addEventListener('click', function (e) {
        mailingRadio.forEach(function (item3) {
          item3.classList.remove('mailing-item--active');
          e.currentTarget.classList.add('mailing-item--active');
        });
      });
    });
    if (item.contains(mailingPopupButtonEmail)) {
      mailingPopupButton.forEach(function (item2) {
        item2.addEventListener('click', function () {
          mailingPopupInput.classList.remove('order-email--active');
          bookForm2.style.display = 'none';
          bookForm1.style.display = 'flex';
          ctlgForm2.style.display = 'none';
          ctlgForm1.style.display = 'flex';
        });
      });
      mailingPopupButtonEmail.addEventListener('click', function () {
        mailingPopupInput.classList.add('order-email--active');
        bookForm2.style.display = 'flex';
        bookForm1.style.display = 'none';
        ctlgForm2.style.display = 'flex';
        ctlgForm1.style.display = 'none';
      });
    }
  });
};
mailingPopupChange();
var validator1 = new Validator({
  form: document.getElementById('ctlg-form1'),
  rules: {
    name: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator1.form.onsubmit = function (evn) {
  var _validator1$errorMess, _validator1$errorMess3;
  evn.preventDefault();
  var values = validator1.getValues();
  var errorMessageName = document.querySelector('.input-error1--name');
  var errorMessagePhone = document.querySelector('.input-error1--phone');
  var pages = document.querySelector('.popup-catalog-form-two');
  if (validator1 !== null && validator1 !== void 0 && (_validator1$errorMess = validator1.errorMessages) !== null && _validator1$errorMess !== void 0 && _validator1$errorMess.name) {
    var _validator1$errorMess2;
    errorMessageName.innerHTML = validator1 === null || validator1 === void 0 ? void 0 : (_validator1$errorMess2 = validator1.errorMessages) === null || _validator1$errorMess2 === void 0 ? void 0 : _validator1$errorMess2.name;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator1 !== null && validator1 !== void 0 && (_validator1$errorMess3 = validator1.errorMessages) !== null && _validator1$errorMess3 !== void 0 && _validator1$errorMess3.phone) {
    var _validator1$errorMess4;
    errorMessagePhone.innerHTML = validator1 === null || validator1 === void 0 ? void 0 : (_validator1$errorMess4 = validator1.errorMessages) === null || _validator1$errorMess4 === void 0 ? void 0 : _validator1$errorMess4.phone;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.name && values.phone) {
    pages.classList.remove('ctlg-slide--active');
    pages.nextElementSibling.classList.add('ctlg-slide--active');
  }
};
validator1.form.onreset = function (evn) {
  var data = validator1.reset();
  console.log(data);
};
var validator2 = new Validator({
  form: document.getElementById('ctlg-form2'),
  rules: {
    email2: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    name2: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone2: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator2.form.onsubmit = function (evn) {
  var _validator2$errorMess, _validator2$errorMess3, _validator2$errorMess5;
  evn.preventDefault();
  var values = validator2.getValues();
  var errorMessageName = document.querySelector('.input-error2--name');
  var errorMessagePhone = document.querySelector('.input-error2--phone');
  var errorMessageEmail = document.querySelector('.input-error2--email');
  var pages = document.querySelector('.popup-catalog-form-two');
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess = validator2.errorMessages) !== null && _validator2$errorMess !== void 0 && _validator2$errorMess.name2) {
    var _validator2$errorMess2;
    errorMessageName.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess2 = validator2.errorMessages) === null || _validator2$errorMess2 === void 0 ? void 0 : _validator2$errorMess2.name2;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess3 = validator2.errorMessages) !== null && _validator2$errorMess3 !== void 0 && _validator2$errorMess3.phone2) {
    var _validator2$errorMess4;
    errorMessagePhone.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess4 = validator2.errorMessages) === null || _validator2$errorMess4 === void 0 ? void 0 : _validator2$errorMess4.phone2;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess5 = validator2.errorMessages) !== null && _validator2$errorMess5 !== void 0 && _validator2$errorMess5.email2) {
    var _validator2$errorMess6;
    errorMessageEmail.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess6 = validator2.errorMessages) === null || _validator2$errorMess6 === void 0 ? void 0 : _validator2$errorMess6.email2;
    errorMessageEmail.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageEmail.innerHTML = '';
    errorMessageEmail.previousElementSibling.classList.remove('input--error');
  }
  if (values.name2 && values.phone2 && values.email2) {
    pages.classList.remove('ctlg-slide--active');
    pages.nextElementSibling.classList.add('ctlg-slide--active');
  }
};
validator2.form.onreset = function (evn) {
  var data = validator2.reset();
  console.log(data);
};
var validator3 = new Validator({
  form: document.getElementById('book-form1'),
  rules: {
    name3: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone3: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator3.form.onsubmit = function (evn) {
  var _validator3$errorMess, _validator3$errorMess3;
  evn.preventDefault();
  var values = validator3.getValues();
  var errorMessageName = document.querySelector('.input-error3--name');
  var errorMessagePhone = document.querySelector('.input-error3--phone');
  var book = document.querySelector('.popup-order');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  var pages = document.querySelector('.popup-book-form-two');
  if (validator3 !== null && validator3 !== void 0 && (_validator3$errorMess = validator3.errorMessages) !== null && _validator3$errorMess !== void 0 && _validator3$errorMess.name3) {
    var _validator3$errorMess2;
    errorMessageName.innerHTML = validator3 === null || validator3 === void 0 ? void 0 : (_validator3$errorMess2 = validator3.errorMessages) === null || _validator3$errorMess2 === void 0 ? void 0 : _validator3$errorMess2.name3;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator3 !== null && validator3 !== void 0 && (_validator3$errorMess3 = validator3.errorMessages) !== null && _validator3$errorMess3 !== void 0 && _validator3$errorMess3.phone3) {
    var _validator3$errorMess4;
    errorMessagePhone.innerHTML = validator3 === null || validator3 === void 0 ? void 0 : (_validator3$errorMess4 = validator3.errorMessages) === null || _validator3$errorMess4 === void 0 ? void 0 : _validator3$errorMess4.phone3;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.name3 && values.phone3) {
    pages.classList.remove('book-slide--active');
    pages.nextElementSibling.classList.add('book-slide--active');
    orderRightTwo.classList.remove('order-header--active');
    orderRightTwo.nextElementSibling.classList.add('order-header--active');
  }
};
validator3.form.onreset = function (evn) {
  var data = validator3.reset();
  console.log(data);
};
var validator4 = new Validator({
  form: document.getElementById('book-form2'),
  rules: {
    email4: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    name4: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone4: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator4.form.onsubmit = function (evn) {
  var _validator4$errorMess, _validator4$errorMess3, _validator4$errorMess5;
  evn.preventDefault();
  var values = validator4.getValues();
  var errorMessageName = document.querySelector('.input-error4--name');
  var errorMessagePhone = document.querySelector('.input-error4--phone');
  var errorMessageEmail = document.querySelector('.input-error4--email');
  var book = document.querySelector('.popup-order');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  var pages = document.querySelector('.popup-book-form-two');
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess = validator4.errorMessages) !== null && _validator4$errorMess !== void 0 && _validator4$errorMess.name4) {
    var _validator4$errorMess2;
    errorMessageName.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess2 = validator4.errorMessages) === null || _validator4$errorMess2 === void 0 ? void 0 : _validator4$errorMess2.name4;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess3 = validator4.errorMessages) !== null && _validator4$errorMess3 !== void 0 && _validator4$errorMess3.phone4) {
    var _validator4$errorMess4;
    errorMessagePhone.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess4 = validator4.errorMessages) === null || _validator4$errorMess4 === void 0 ? void 0 : _validator4$errorMess4.phone4;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess5 = validator4.errorMessages) !== null && _validator4$errorMess5 !== void 0 && _validator4$errorMess5.email4) {
    var _validator4$errorMess6;
    errorMessageEmail.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess6 = validator4.errorMessages) === null || _validator4$errorMess6 === void 0 ? void 0 : _validator4$errorMess6.email4;
    errorMessageEmail.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageEmail.innerHTML = '';
    errorMessageEmail.previousElementSibling.classList.remove('input--error');
  }
  if (values.name4 && values.phone4 && values.email4) {
    pages.classList.remove('book-slide--active');
    pages.nextElementSibling.classList.add('book-slide--active');
    orderRightTwo.classList.remove('order-header--active');
    orderRightTwo.nextElementSibling.classList.add('order-header--active');
  }
};
validator4.form.onreset = function (evn) {
  var data = validator4.reset();
  console.log(data);
};
var ctlgChange = function ctlgChange() {
  var ctgl = document.querySelector('.popup-catalog');
  var ctglChangeOne = ctgl.querySelector('.ctlg-slide--one');
  var ctglChangeOneButton = ctglChangeOne.querySelector('.button');
  var ctglChangeTwo = ctgl.querySelector('.ctlg-slide--two');
  ctglChangeOneButton.addEventListener('click', function () {
    ctglChangeOne.classList.remove('ctlg-slide--active');
    ctglChangeTwo.classList.add('ctlg-slide--active');
  });
};
ctlgChange();
var callbackChange = function callbackChange() {
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  var callbackChangeTime = callback.querySelector('.callback-tabs__button--time');
  var callbackChangeNow = callback.querySelector('.callback-tabs__button--now');
  var callbackFormOne = callback.querySelector('.callback-form1');
  var callbackFormTwo = callback.querySelector('.callback-form2');
  callbackChangeTime.addEventListener('click', function () {
    callbackFormOne.style.display = 'none';
    callbackFormTwo.style.display = 'block';
  });
  callbackChangeNow.addEventListener('click', function () {
    callbackFormOne.style.display = 'block';
    callbackFormTwo.style.display = 'none';
  });
};
callbackChange();
var validator5 = new Validator({
  form: document.getElementById('callback-form1'),
  rules: {
    phone5: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator5.form.onsubmit = function (evn) {
  var _validator5$errorMess;
  evn.preventDefault();
  var values = validator5.getValues();
  var errorMessagePhone = document.querySelector('.input-error5--phone');
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  if (validator5 !== null && validator5 !== void 0 && (_validator5$errorMess = validator5.errorMessages) !== null && _validator5$errorMess !== void 0 && _validator5$errorMess.phone5) {
    var _validator5$errorMess2;
    errorMessagePhone.innerHTML = validator5 === null || validator5 === void 0 ? void 0 : (_validator5$errorMess2 = validator5.errorMessages) === null || _validator5$errorMess2 === void 0 ? void 0 : _validator5$errorMess2.phone5;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.phone5) {
    callbackChangeOne.classList.remove('callback-slide--active');
    callbackChangeOne.nextElementSibling.classList.add('callback-slide--active');
  }
};
validator5.form.onreset = function (evn) {
  var data = validator5.reset();
  console.log(data);
};
var validator6 = new Validator({
  form: document.getElementById('callback-form2'),
  rules: {
    phone6: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    },
    info6: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator6.form.onsubmit = function (evn) {
  var _validator6$errorMess, _validator6$errorMess3;
  evn.preventDefault();
  var values = validator6.getValues();
  var errorMessagePhone = document.querySelector('.input-error6--phone');
  var errorMessageInfo = document.querySelector('.input-error6--info');
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  if (validator6 !== null && validator6 !== void 0 && (_validator6$errorMess = validator6.errorMessages) !== null && _validator6$errorMess !== void 0 && _validator6$errorMess.phone6) {
    var _validator6$errorMess2;
    errorMessagePhone.innerHTML = validator6 === null || validator6 === void 0 ? void 0 : (_validator6$errorMess2 = validator6.errorMessages) === null || _validator6$errorMess2 === void 0 ? void 0 : _validator6$errorMess2.phone6;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator6 !== null && validator6 !== void 0 && (_validator6$errorMess3 = validator6.errorMessages) !== null && _validator6$errorMess3 !== void 0 && _validator6$errorMess3.info6) {
    var _validator6$errorMess4;
    errorMessageInfo.innerHTML = validator6 === null || validator6 === void 0 ? void 0 : (_validator6$errorMess4 = validator6.errorMessages) === null || _validator6$errorMess4 === void 0 ? void 0 : _validator6$errorMess4.info6;
    errorMessageInfo.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageInfo.innerHTML = '';
    errorMessageInfo.previousElementSibling.classList.remove('input--error');
  }
  if (values.phone6 && values.info6) {
    callbackChangeOne.classList.remove('callback-slide--active');
    callbackChangeOne.nextElementSibling.classList.add('callback-slide--active');
  }
};
validator5.form.onreset = function (evn) {
  var data = validator5.reset();
  console.log(data);
};
var orderChange = function orderChange() {
  var book = document.querySelector('.popup-order');
  var bookChangeOne = book.querySelector('.book-slide--one');
  var bookChangeOneButton = bookChangeOne.querySelector('.button');
  var bookChangeTwo = book.querySelector('.book-slide--two');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  bookChangeOneButton.addEventListener('click', function () {
    bookChangeOne.classList.remove('book-slide--active');
    bookChangeTwo.classList.add('book-slide--active');
    orderRightOne.classList.remove('order-header--active');
    orderRightOne.nextElementSibling.classList.add('order-header--active');
  });
};
orderChange();
var minPopup = function minPopup() {
  var buttonLeft = document.querySelector('.button-plus--left');
  var buttonCenter = document.querySelector('.button-plus--center');
  var buttonRight = document.querySelector('.button-plus--right');
  var windowLeft = document.querySelector('.window--left');
  var windowCenter = document.querySelector('.window--center');
  var windowRight = document.querySelector('.window--right');
  var windowLeftClose = windowLeft.querySelector('.window__close');
  var windowCenterClose = windowCenter.querySelector('.window__close');
  var windowRightClose = windowRight.querySelector('.window__close');
  buttonLeft.addEventListener('click', function (e) {
    e.stopPropagation();
    windowLeft.classList.toggle('window--active');
    windowLeftClose.addEventListener('click', function () {
      windowLeft.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowLeft.classList.remove('window--active');
    });
  });
  buttonCenter.addEventListener('click', function (e) {
    e.stopPropagation();
    windowCenter.classList.toggle('window--active');
    windowCenterClose.addEventListener('click', function () {
      windowCenter.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowCenter.classList.remove('window--active');
    });
  });
  buttonRight.addEventListener('click', function (e) {
    e.stopPropagation(e);
    windowRight.classList.toggle('window--active');
    windowRightClose.addEventListener('click', function () {
      windowRight.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowRight.classList.remove('window--active');
    });
  });
};
minPopup();
var number = document.querySelector('.number'),
  numberTop = number.getBoundingClientRect().top,
  start = +number.innerHTML,
  end = +number.dataset.max;
window.addEventListener('scroll', function onScroll() {
  if (window.pageYOffset > numberTop - window.innerHeight / 2) {
    this.removeEventListener('scroll', onScroll);
    var interval = setInterval(function () {
      number.innerHTML = ++start;
      if (start == end) {
        clearInterval(interval);
      }
    }, 5);
  }
});
var number1 = document.querySelector('.number1'),
  number1Top = number1.getBoundingClientRect().top,
  start1 = +number1.innerHTML,
  end1 = +number1.dataset.max;
console.log(start1);
window.addEventListener('scroll', function onScroll() {
  if (window.pageYOffset > number1Top - window.innerHeight / 2) {
    this.removeEventListener('scroll', onScroll);
    var interval1 = setInterval(function () {
      number1.innerHTML = ++start1;
      if (start1 == end1) {
        clearInterval(interval1);
      }
    }, 5);
  }
});
var number2 = document.querySelector('.number2'),
  number2Top = number2.getBoundingClientRect().top,
  start2 = +number2.innerHTML,
  end2 = +number2.dataset.max;
window.addEventListener('scroll', function onScroll() {
  if (window.pageYOffset > number2Top - window.innerHeight / 2) {
    this.removeEventListener('scroll', onScroll);
    var interval2 = setInterval(function () {
      number2.innerHTML = ++start2;
      if (start2 == end2) {
        clearInterval(interval2);
      }
    }, 5);
  }
});
var number3 = document.querySelector('.number3'),
  number3Top = number3.getBoundingClientRect().top,
  start3 = +number3.innerHTML,
  end3 = +number3.dataset.max;
window.addEventListener('scroll', function onScroll() {
  if (window.pageYOffset > number3Top - window.innerHeight / 2) {
    this.removeEventListener('scroll', onScroll);
    var interval3 = setInterval(function () {
      number3.innerHTML = ++start3;
      if (start3 == end3) {
        clearInterval(interval3);
      }
    }, 5);
  }
});
var tab = function tab() {
  var tabNav = document.querySelectorAll('.tabs-nav__item'),
    // Выбираем элементы навигации табов
    tabContent = document.querySelectorAll('.tabs-content__item'),
    // Выбираем самы табы
    tabName; // Переменная для имени таба

  // Проходим циклом по каждому элементу навигации и навешиваем обработчик клика, который вызывает функцию selectTabNav
  tabNav.forEach(function (item) {
    item.addEventListener('click', selectTabNav);
  });
  function selectTabNav() {
    tabNav.forEach(function (item) {
      // Удаляем активный класс у всех элементов навигации табов
      item.classList.remove('tabs-nav__item--active');
    });
    this.classList.add('tabs-nav__item--active'); // Добавляем активный укласс у элемента по которому кликнули
    tabName = this.getAttribute('data-tab-name'); // Получаем имя таба, который нам нужен
    selectTabContent(tabName); // Запускаем функцию, чтобы показать выбранный таб
  }

  function selectTabContent(tab) {
    // Проходим по всем табам и проверяем есть ли у элемента класс, равный имени таба(переменной tabName). Если есть, то добавляем класс активного таба, если нет, то удаляем этот класс
    tabContent.forEach(function (item) {
      var classList = item.classList;
      classList.contains(tab) ? classList.add('tabs-content__item--active') : classList.remove('tabs-content__item--active');
    });
  }
};
tab();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
