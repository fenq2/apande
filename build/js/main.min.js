"use strict";

var swiper = new Swiper('.card-swiper', {
  freeMode: true,
  watchSlidesProgress: true,
  breakpoints: {
    320: {
      spaceBetween: 14,
      slidesPerView: 2.5
    },
    400: {
      spaceBetween: 14,
      slidesPerView: 3
    },
    650: {
      spaceBetween: 10,
      slidesPerView: 4
    }
  }
});
var swiper2 = new Swiper('.card-swiper2', {
  spaceBetween: 10,
  navigation: {
    nextEl: '.card-swiper-button-next',
    prevEl: '.card-swiper-button-prev'
  },
  thumbs: {
    swiper: swiper
  }
});
var swiper3 = new Swiper('.reviews-swiper', {
  navigation: {
    nextEl: '.reviews-swiper-button-next',
    prevEl: '.reviews-swiper-button-prev'
  },
  pagination: {
    el: '.swiper-pagination'
  },
  breakpoints: {
    320: {
      slidesPerView: 1
    },
    600: {
      slidesPerView: 2,
      spaceBetween: 18
    },
    768: {
      slidesPerView: 2,
      spaceBetween: 24
    },
    1000: {
      slidesPerView: 2,
      spaceBetween: 32
    }
  }
});
var swiper4 = new Swiper('.catalog-swiper', {
  loop: true,
  // speed: 2000,
  effect: 'coverflow',
  coverflowEffect: {
    rotate: 0,
    slideShadows: false,
    modifier: 1,
    depth: 30
  },
  autoplay: {
    delay: 3000
  },
  breakpoints: {
    320: {
      slidesPerView: 3,
      spaceBetween: 23
    },
    700: {
      slidesPerView: 5,
      spaceBetween: 26
    },
    768: {
      slidesPerView: 5,
      spaceBetween: 34
    },
    1000: {
      spaceBetween: 47,
      slidesPerView: 5
    }
  }
});
var popupLinks = document.querySelectorAll('.popup-link');
var body = document.querySelector('body');
var lockPadding = document.querySelectorAll('.lock-padding');
var unlock = true;
var timeout = 400;
if (popupLinks.length > 0) {
  var _loop = function _loop() {
    var popupLink = popupLinks[index];
    popupLink.addEventListener('click', function (e) {
      var popupName = popupLink.getAttribute('href').replace('#', '');
      var curentPopup = document.getElementById(popupName);
      popupOpen(curentPopup);
      e.preventDefault();
    });
  };
  for (var index = 0; index < popupLinks.length; index++) {
    _loop();
  }
}
var popupCloseIcon = document.querySelectorAll('.close-popup');
if (popupCloseIcon.length > 0) {
  var _loop2 = function _loop2() {
    var el = popupCloseIcon[_index];
    el.addEventListener('click', function (e) {
      popupClose(el.closest('.popup'));
      e.preventDefault();
    });
  };
  for (var _index = 0; _index < popupCloseIcon.length; _index++) {
    _loop2();
  }
}
function popupOpen(curentPopup) {
  if (curentPopup && unlock) {
    var popupActive = document.querySelector('.popup.open');
    if (popupActive) {
      popupClose(popupActive, false);
    } else {
      bodyLock();
    }
    curentPopup.classList.add('open');
    curentPopup.addEventListener('click', function (e) {
      if (!e.target.closest('.popup__content')) {
        popupClose(e.target.closest('.popup'));
      }
    });
  }
}
function popupClose(popupActive) {
  var doUnlock = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  if (unlock) {
    popupActive.classList.remove('open');
    if (doUnlock) {
      bodyUnLock();
    }
  }
}
function bodyLock() {
  var lockPaddingValue = 17;
  if (lockPadding.length > 0) {
    for (var _index2 = 0; _index2 < lockPadding.length; _index2++) {
      var el = lockPadding[_index2];
      el.style.paddingRight = lockPaddingValue;
    }
  }
  body.style.paddingRight = lockPaddingValue;
  body.classList.add('lock');
  unlock = false;
  setTimeout(function () {
    unlock = true;
  }, timeout);
}
function bodyUnLock() {
  setTimeout(function () {
    if (lockPadding.length > 0) {
      for (var _index3 = 0; _index3 < lockPadding.length; _index3++) {
        var el = lockPadding[_index3];
        el.style.paddingRight = '0px';
      }
    }
    body.style.paddingRight = '0px';
    body.classList.remove('lock');
  }, timeout);
  unlock = false;
  setTimeout(function () {
    unlock = true;
  }, timeout);
}
document.addEventListener('keydown', function (e) {
  if (e.which === 27) {
    var popupActive = document.querySelector('.popup.open');
    popupClose(popupActive);
  }
});
(function () {
  // проверяем поддержку
  if (!Element.prototype.closest) {
    // реализуем
    Element.prototype.closest = function (css) {
      var node = this;
      while (node) {
        if (node.matches(css)) return node;
        node = node.parentElement;
      }
      return null;
    };
  }
})();
(function () {
  // проверяем поддержку
  if (!Element.prototype.matches) {
    // определяем свойство
    Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;
  }
})();
var mailingPopupChange = function mailingPopupChange() {
  var mailingPopup = document.querySelectorAll('.popup');
  mailingPopup.forEach(function (item) {
    var mailingRadio = item.querySelectorAll('.mailing-item');
    var mailingPopupButtonEmail = item.querySelector('.mailing-item--email');
    var mailingPopupButton = item.querySelectorAll('.mailing-item');
    var mailingPopupInput = item.querySelector('.order-email');
    var ctlgForm1 = document.querySelector('.ctlg-form1');
    var ctlgForm2 = document.querySelector('.ctlg-form2');
    var bookForm1 = document.querySelector('.book-form1');
    var bookForm2 = document.querySelector('.book-form2');
    mailingRadio.forEach(function (item1) {
      item1.addEventListener('click', function (e) {
        mailingRadio.forEach(function (item3) {
          item3.classList.remove('mailing-item--active');
          e.currentTarget.classList.add('mailing-item--active');
        });
      });
    });
    if (item.contains(mailingPopupButtonEmail)) {
      mailingPopupButton.forEach(function (item2) {
        item2.addEventListener('click', function () {
          mailingPopupInput.classList.remove('order-email--active');
          bookForm2.style.display = 'none';
          bookForm1.style.display = 'flex';
          ctlgForm2.style.display = 'none';
          ctlgForm1.style.display = 'flex';
        });
      });
      mailingPopupButtonEmail.addEventListener('click', function () {
        mailingPopupInput.classList.add('order-email--active');
        bookForm2.style.display = 'flex';
        bookForm1.style.display = 'none';
        ctlgForm2.style.display = 'flex';
        ctlgForm1.style.display = 'none';
      });
    }
  });
};
mailingPopupChange();
var validator1 = new Validator({
  form: document.getElementById('ctlg-form1'),
  rules: {
    name: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator1.form.onsubmit = function (evn) {
  var _validator1$errorMess, _validator1$errorMess3;
  evn.preventDefault();
  var values = validator1.getValues();
  var errorMessageName = document.querySelector('.input-error1--name');
  var errorMessagePhone = document.querySelector('.input-error1--phone');
  var pages = document.querySelector('.popup-catalog-form-two');
  if (validator1 !== null && validator1 !== void 0 && (_validator1$errorMess = validator1.errorMessages) !== null && _validator1$errorMess !== void 0 && _validator1$errorMess.name) {
    var _validator1$errorMess2;
    errorMessageName.innerHTML = validator1 === null || validator1 === void 0 ? void 0 : (_validator1$errorMess2 = validator1.errorMessages) === null || _validator1$errorMess2 === void 0 ? void 0 : _validator1$errorMess2.name;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator1 !== null && validator1 !== void 0 && (_validator1$errorMess3 = validator1.errorMessages) !== null && _validator1$errorMess3 !== void 0 && _validator1$errorMess3.phone) {
    var _validator1$errorMess4;
    errorMessagePhone.innerHTML = validator1 === null || validator1 === void 0 ? void 0 : (_validator1$errorMess4 = validator1.errorMessages) === null || _validator1$errorMess4 === void 0 ? void 0 : _validator1$errorMess4.phone;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.name && values.phone) {
    pages.classList.remove('ctlg-slide--active');
    pages.nextElementSibling.classList.add('ctlg-slide--active');
  }
};
validator1.form.onreset = function (evn) {
  var data = validator1.reset();
  console.log(data);
};
var validator2 = new Validator({
  form: document.getElementById('ctlg-form2'),
  rules: {
    email2: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    name2: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone2: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator2.form.onsubmit = function (evn) {
  var _validator2$errorMess, _validator2$errorMess3, _validator2$errorMess5;
  evn.preventDefault();
  var values = validator2.getValues();
  var errorMessageName = document.querySelector('.input-error2--name');
  var errorMessagePhone = document.querySelector('.input-error2--phone');
  var errorMessageEmail = document.querySelector('.input-error2--email');
  var pages = document.querySelector('.popup-catalog-form-two');
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess = validator2.errorMessages) !== null && _validator2$errorMess !== void 0 && _validator2$errorMess.name2) {
    var _validator2$errorMess2;
    errorMessageName.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess2 = validator2.errorMessages) === null || _validator2$errorMess2 === void 0 ? void 0 : _validator2$errorMess2.name2;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess3 = validator2.errorMessages) !== null && _validator2$errorMess3 !== void 0 && _validator2$errorMess3.phone2) {
    var _validator2$errorMess4;
    errorMessagePhone.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess4 = validator2.errorMessages) === null || _validator2$errorMess4 === void 0 ? void 0 : _validator2$errorMess4.phone2;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator2 !== null && validator2 !== void 0 && (_validator2$errorMess5 = validator2.errorMessages) !== null && _validator2$errorMess5 !== void 0 && _validator2$errorMess5.email2) {
    var _validator2$errorMess6;
    errorMessageEmail.innerHTML = validator2 === null || validator2 === void 0 ? void 0 : (_validator2$errorMess6 = validator2.errorMessages) === null || _validator2$errorMess6 === void 0 ? void 0 : _validator2$errorMess6.email2;
    errorMessageEmail.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageEmail.innerHTML = '';
    errorMessageEmail.previousElementSibling.classList.remove('input--error');
  }
  if (values.name2 && values.phone2 && values.email2) {
    pages.classList.remove('ctlg-slide--active');
    pages.nextElementSibling.classList.add('ctlg-slide--active');
  }
};
validator2.form.onreset = function (evn) {
  var data = validator2.reset();
  console.log(data);
};
var validator3 = new Validator({
  form: document.getElementById('book-form1'),
  rules: {
    name3: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone3: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator3.form.onsubmit = function (evn) {
  var _validator3$errorMess, _validator3$errorMess3;
  evn.preventDefault();
  var values = validator3.getValues();
  var errorMessageName = document.querySelector('.input-error3--name');
  var errorMessagePhone = document.querySelector('.input-error3--phone');
  var book = document.querySelector('.popup-order');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  var pages = document.querySelector('.popup-book-form-two');
  if (validator3 !== null && validator3 !== void 0 && (_validator3$errorMess = validator3.errorMessages) !== null && _validator3$errorMess !== void 0 && _validator3$errorMess.name3) {
    var _validator3$errorMess2;
    errorMessageName.innerHTML = validator3 === null || validator3 === void 0 ? void 0 : (_validator3$errorMess2 = validator3.errorMessages) === null || _validator3$errorMess2 === void 0 ? void 0 : _validator3$errorMess2.name3;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator3 !== null && validator3 !== void 0 && (_validator3$errorMess3 = validator3.errorMessages) !== null && _validator3$errorMess3 !== void 0 && _validator3$errorMess3.phone3) {
    var _validator3$errorMess4;
    errorMessagePhone.innerHTML = validator3 === null || validator3 === void 0 ? void 0 : (_validator3$errorMess4 = validator3.errorMessages) === null || _validator3$errorMess4 === void 0 ? void 0 : _validator3$errorMess4.phone3;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.name3 && values.phone3) {
    pages.classList.remove('book-slide--active');
    pages.nextElementSibling.classList.add('book-slide--active');
    orderRightTwo.classList.remove('order-header--active');
    orderRightTwo.nextElementSibling.classList.add('order-header--active');
  }
};
validator3.form.onreset = function (evn) {
  var data = validator3.reset();
  console.log(data);
};
var validator4 = new Validator({
  form: document.getElementById('book-form2'),
  rules: {
    email4: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    name4: {
      validate: function validate(val) {
        return val ? '' : 'Ошибочка вышла';
      }
    },
    phone4: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator4.form.onsubmit = function (evn) {
  var _validator4$errorMess, _validator4$errorMess3, _validator4$errorMess5;
  evn.preventDefault();
  var values = validator4.getValues();
  var errorMessageName = document.querySelector('.input-error4--name');
  var errorMessagePhone = document.querySelector('.input-error4--phone');
  var errorMessageEmail = document.querySelector('.input-error4--email');
  var book = document.querySelector('.popup-order');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  var pages = document.querySelector('.popup-book-form-two');
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess = validator4.errorMessages) !== null && _validator4$errorMess !== void 0 && _validator4$errorMess.name4) {
    var _validator4$errorMess2;
    errorMessageName.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess2 = validator4.errorMessages) === null || _validator4$errorMess2 === void 0 ? void 0 : _validator4$errorMess2.name4;
    errorMessageName.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageName.innerHTML = '';
    errorMessageName.previousElementSibling.classList.remove('input--error');
  }
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess3 = validator4.errorMessages) !== null && _validator4$errorMess3 !== void 0 && _validator4$errorMess3.phone4) {
    var _validator4$errorMess4;
    errorMessagePhone.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess4 = validator4.errorMessages) === null || _validator4$errorMess4 === void 0 ? void 0 : _validator4$errorMess4.phone4;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator4 !== null && validator4 !== void 0 && (_validator4$errorMess5 = validator4.errorMessages) !== null && _validator4$errorMess5 !== void 0 && _validator4$errorMess5.email4) {
    var _validator4$errorMess6;
    errorMessageEmail.innerHTML = validator4 === null || validator4 === void 0 ? void 0 : (_validator4$errorMess6 = validator4.errorMessages) === null || _validator4$errorMess6 === void 0 ? void 0 : _validator4$errorMess6.email4;
    errorMessageEmail.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageEmail.innerHTML = '';
    errorMessageEmail.previousElementSibling.classList.remove('input--error');
  }
  if (values.name4 && values.phone4 && values.email4) {
    pages.classList.remove('book-slide--active');
    pages.nextElementSibling.classList.add('book-slide--active');
    orderRightTwo.classList.remove('order-header--active');
    orderRightTwo.nextElementSibling.classList.add('order-header--active');
  }
};
validator4.form.onreset = function (evn) {
  var data = validator4.reset();
  console.log(data);
};
var ctlgChange = function ctlgChange() {
  var ctgl = document.querySelector('.popup-catalog');
  var ctglChangeOne = ctgl.querySelector('.ctlg-slide--one');
  var ctglChangeOneButton = ctglChangeOne.querySelector('.button');
  var ctglChangeTwo = ctgl.querySelector('.ctlg-slide--two');
  ctglChangeOneButton.addEventListener('click', function () {
    ctglChangeOne.classList.remove('ctlg-slide--active');
    ctglChangeTwo.classList.add('ctlg-slide--active');
  });
};
ctlgChange();
var callbackChange = function callbackChange() {
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  var callbackChangeTime = callback.querySelector('.callback-tabs__button--time');
  var callbackChangeNow = callback.querySelector('.callback-tabs__button--now');
  var callbackFormOne = callback.querySelector('.callback-form1');
  var callbackFormTwo = callback.querySelector('.callback-form2');
  callbackChangeTime.addEventListener('click', function () {
    callbackFormOne.style.display = 'none';
    callbackFormTwo.style.display = 'block';
  });
  callbackChangeNow.addEventListener('click', function () {
    callbackFormOne.style.display = 'block';
    callbackFormTwo.style.display = 'none';
  });
};
callbackChange();
var validator5 = new Validator({
  form: document.getElementById('callback-form1'),
  rules: {
    phone5: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator5.form.onsubmit = function (evn) {
  var _validator5$errorMess;
  evn.preventDefault();
  var values = validator5.getValues();
  var errorMessagePhone = document.querySelector('.input-error5--phone');
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  if (validator5 !== null && validator5 !== void 0 && (_validator5$errorMess = validator5.errorMessages) !== null && _validator5$errorMess !== void 0 && _validator5$errorMess.phone5) {
    var _validator5$errorMess2;
    errorMessagePhone.innerHTML = validator5 === null || validator5 === void 0 ? void 0 : (_validator5$errorMess2 = validator5.errorMessages) === null || _validator5$errorMess2 === void 0 ? void 0 : _validator5$errorMess2.phone5;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (values.phone5) {
    callbackChangeOne.classList.remove('callback-slide--active');
    callbackChangeOne.nextElementSibling.classList.add('callback-slide--active');
  }
};
validator5.form.onreset = function (evn) {
  var data = validator5.reset();
  console.log(data);
};
var validator6 = new Validator({
  form: document.getElementById('callback-form2'),
  rules: {
    phone6: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    },
    info6: {
      validate: function validate(val) {
        return !val ? 'Ошибочка вышла' : '';
      }
    }
  }
});
validator6.form.onsubmit = function (evn) {
  var _validator6$errorMess, _validator6$errorMess3;
  evn.preventDefault();
  var values = validator6.getValues();
  var errorMessagePhone = document.querySelector('.input-error6--phone');
  var errorMessageInfo = document.querySelector('.input-error6--info');
  var callback = document.querySelector('.popup-callback');
  var callbackChangeOne = callback.querySelector('.callback-slide--one');
  var callbackChangeOneButton = callback.querySelector('.button');
  var callbackChangeTwo = callback.querySelector('.callback-slide--two');
  if (validator6 !== null && validator6 !== void 0 && (_validator6$errorMess = validator6.errorMessages) !== null && _validator6$errorMess !== void 0 && _validator6$errorMess.phone6) {
    var _validator6$errorMess2;
    errorMessagePhone.innerHTML = validator6 === null || validator6 === void 0 ? void 0 : (_validator6$errorMess2 = validator6.errorMessages) === null || _validator6$errorMess2 === void 0 ? void 0 : _validator6$errorMess2.phone6;
    errorMessagePhone.previousElementSibling.classList.add('input--error');
  } else {
    errorMessagePhone.innerHTML = '';
    errorMessagePhone.previousElementSibling.classList.remove('input--error');
  }
  if (validator6 !== null && validator6 !== void 0 && (_validator6$errorMess3 = validator6.errorMessages) !== null && _validator6$errorMess3 !== void 0 && _validator6$errorMess3.info6) {
    var _validator6$errorMess4;
    errorMessageInfo.innerHTML = validator6 === null || validator6 === void 0 ? void 0 : (_validator6$errorMess4 = validator6.errorMessages) === null || _validator6$errorMess4 === void 0 ? void 0 : _validator6$errorMess4.info6;
    errorMessageInfo.previousElementSibling.classList.add('input--error');
  } else {
    errorMessageInfo.innerHTML = '';
    errorMessageInfo.previousElementSibling.classList.remove('input--error');
  }
  if (values.phone6 && values.info6) {
    callbackChangeOne.classList.remove('callback-slide--active');
    callbackChangeOne.nextElementSibling.classList.add('callback-slide--active');
  }
};
validator5.form.onreset = function (evn) {
  var data = validator5.reset();
  console.log(data);
};
var orderChange = function orderChange() {
  var book = document.querySelector('.popup-order');
  var bookChangeOne = book.querySelector('.book-slide--one');
  var bookChangeOneButton = bookChangeOne.querySelector('.button');
  var bookChangeTwo = book.querySelector('.book-slide--two');
  var orderRightOne = book.querySelector('.order-header--one');
  var orderRightTwo = book.querySelector('.order-header--two');
  bookChangeOneButton.addEventListener('click', function () {
    bookChangeOne.classList.remove('book-slide--active');
    bookChangeTwo.classList.add('book-slide--active');
    orderRightOne.classList.remove('order-header--active');
    orderRightOne.nextElementSibling.classList.add('order-header--active');
  });
};
orderChange();
var minPopup = function minPopup() {
  var buttonLeft = document.querySelector('.button-plus--left');
  var buttonCenter = document.querySelector('.button-plus--center');
  var buttonRight = document.querySelector('.button-plus--right');
  var windowLeft = document.querySelector('.window--left');
  var windowCenter = document.querySelector('.window--center');
  var windowRight = document.querySelector('.window--right');
  var windowLeftClose = windowLeft.querySelector('.window__close');
  var windowCenterClose = windowCenter.querySelector('.window__close');
  var windowRightClose = windowRight.querySelector('.window__close');
  buttonLeft.addEventListener('click', function (e) {
    e.stopPropagation();
    windowLeft.classList.toggle('window--active');
    windowLeftClose.addEventListener('click', function () {
      windowLeft.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowLeft.classList.remove('window--active');
    });
  });
  buttonCenter.addEventListener('click', function (e) {
    e.stopPropagation();
    windowCenter.classList.toggle('window--active');
    windowCenterClose.addEventListener('click', function () {
      windowCenter.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowCenter.classList.remove('window--active');
    });
  });
  buttonRight.addEventListener('click', function (e) {
    e.stopPropagation(e);
    windowRight.classList.toggle('window--active');
    windowRightClose.addEventListener('click', function () {
      windowRight.classList.remove('window--active');
    });
    window.addEventListener('click', function () {
      windowRight.classList.remove('window--active');
    });
  });
};
minPopup();
(function () {
  var counter = document.querySelectorAll('.number');
  var limit = 0; // Переменная, чтобы останавливать функцию, когда всё запустится.
  window.addEventListener('scroll', function () {
    if (limit == counter.length) {
      return;
    }
    var _loop3 = function _loop3(i) {
      var pos = counter[i].getBoundingClientRect().top; //Позиция блока, считая сверху окна
      var win = window.innerHeight - 40; // На 40 пикселей меньше, чем высота окна
      if (pos < win && counter[i].dataset.stop === '0') {
        counter[i].dataset.stop = 1; // Останавливаем перезапуск счета в этом блоке
        var x = 0;
        limit++; // Счетчик будет запущен, увеличиваем переменную на 1
        var _int = setInterval(function () {
          // Раз в 60 миллисекунд будет прибавляться 50-я часть нужного числа
          x = x + Math.ceil(counter[i].dataset.to / 50);
          counter[i].innerText = x;
          if (x > counter[i].dataset.to) {
            //Как только досчитали - стираем интервал.
            counter[i].innerText = counter[i].dataset.to;
            clearInterval(_int);
          }
        }, 60);
      }
    };
    for (var i = 0; i < counter.length; i++) {
      _loop3(i);
    }
  });
})();
var tab = function tab() {
  var tabNav = document.querySelectorAll('.tabs-nav__item'),
    // Выбираем элементы навигации табов
    tabContent = document.querySelectorAll('.tabs-content__item'),
    // Выбираем самы табы
    tabName; // Переменная для имени таба

  // Проходим циклом по каждому элементу навигации и навешиваем обработчик клика, который вызывает функцию selectTabNav
  tabNav.forEach(function (item) {
    item.addEventListener('click', selectTabNav);
  });
  function selectTabNav() {
    tabNav.forEach(function (item) {
      // Удаляем активный класс у всех элементов навигации табов
      item.classList.remove('tabs-nav__item--active');
    });
    this.classList.add('tabs-nav__item--active'); // Добавляем активный укласс у элемента по которому кликнули
    tabName = this.getAttribute('data-tab-name'); // Получаем имя таба, который нам нужен
    selectTabContent(tabName); // Запускаем функцию, чтобы показать выбранный таб
  }

  function selectTabContent(tab) {
    // Проходим по всем табам и проверяем есть ли у элемента класс, равный имени таба(переменной tabName). Если есть, то добавляем класс активного таба, если нет, то удаляем этот класс
    tabContent.forEach(function (item) {
      var classList = item.classList;
      classList.contains(tab) ? classList.add('tabs-content__item--active') : classList.remove('tabs-content__item--active');
    });
  }
};
tab();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5taW4uanMiLCJuYW1lcyI6WyJzd2lwZXIiLCJTd2lwZXIiLCJmcmVlTW9kZSIsIndhdGNoU2xpZGVzUHJvZ3Jlc3MiLCJicmVha3BvaW50cyIsInNwYWNlQmV0d2VlbiIsInNsaWRlc1BlclZpZXciLCJzd2lwZXIyIiwibmF2aWdhdGlvbiIsIm5leHRFbCIsInByZXZFbCIsInRodW1icyIsInN3aXBlcjMiLCJwYWdpbmF0aW9uIiwiZWwiLCJzd2lwZXI0IiwibG9vcCIsImVmZmVjdCIsImNvdmVyZmxvd0VmZmVjdCIsInJvdGF0ZSIsInNsaWRlU2hhZG93cyIsIm1vZGlmaWVyIiwiZGVwdGgiLCJhdXRvcGxheSIsImRlbGF5IiwicG9wdXBMaW5rcyIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImJvZHkiLCJxdWVyeVNlbGVjdG9yIiwibG9ja1BhZGRpbmciLCJ1bmxvY2siLCJ0aW1lb3V0IiwibGVuZ3RoIiwiX2xvb3AiLCJwb3B1cExpbmsiLCJpbmRleCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwicG9wdXBOYW1lIiwiZ2V0QXR0cmlidXRlIiwicmVwbGFjZSIsImN1cmVudFBvcHVwIiwiZ2V0RWxlbWVudEJ5SWQiLCJwb3B1cE9wZW4iLCJwcmV2ZW50RGVmYXVsdCIsInBvcHVwQ2xvc2VJY29uIiwiX2xvb3AyIiwicG9wdXBDbG9zZSIsImNsb3Nlc3QiLCJwb3B1cEFjdGl2ZSIsImJvZHlMb2NrIiwiY2xhc3NMaXN0IiwiYWRkIiwidGFyZ2V0IiwiZG9VbmxvY2siLCJhcmd1bWVudHMiLCJ1bmRlZmluZWQiLCJyZW1vdmUiLCJib2R5VW5Mb2NrIiwibG9ja1BhZGRpbmdWYWx1ZSIsInN0eWxlIiwicGFkZGluZ1JpZ2h0Iiwic2V0VGltZW91dCIsIndoaWNoIiwiRWxlbWVudCIsInByb3RvdHlwZSIsImNzcyIsIm5vZGUiLCJtYXRjaGVzIiwicGFyZW50RWxlbWVudCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwibWFpbGluZ1BvcHVwQ2hhbmdlIiwibWFpbGluZ1BvcHVwIiwiZm9yRWFjaCIsIml0ZW0iLCJtYWlsaW5nUmFkaW8iLCJtYWlsaW5nUG9wdXBCdXR0b25FbWFpbCIsIm1haWxpbmdQb3B1cEJ1dHRvbiIsIm1haWxpbmdQb3B1cElucHV0IiwiY3RsZ0Zvcm0xIiwiY3RsZ0Zvcm0yIiwiYm9va0Zvcm0xIiwiYm9va0Zvcm0yIiwiaXRlbTEiLCJpdGVtMyIsImN1cnJlbnRUYXJnZXQiLCJjb250YWlucyIsIml0ZW0yIiwiZGlzcGxheSIsInZhbGlkYXRvcjEiLCJWYWxpZGF0b3IiLCJmb3JtIiwicnVsZXMiLCJuYW1lIiwidmFsaWRhdGUiLCJ2YWwiLCJwaG9uZSIsIm9uc3VibWl0IiwiZXZuIiwiX3ZhbGlkYXRvcjEkZXJyb3JNZXNzIiwiX3ZhbGlkYXRvcjEkZXJyb3JNZXNzMyIsInZhbHVlcyIsImdldFZhbHVlcyIsImVycm9yTWVzc2FnZU5hbWUiLCJlcnJvck1lc3NhZ2VQaG9uZSIsInBhZ2VzIiwiZXJyb3JNZXNzYWdlcyIsIl92YWxpZGF0b3IxJGVycm9yTWVzczIiLCJpbm5lckhUTUwiLCJwcmV2aW91c0VsZW1lbnRTaWJsaW5nIiwiX3ZhbGlkYXRvcjEkZXJyb3JNZXNzNCIsIm5leHRFbGVtZW50U2libGluZyIsIm9ucmVzZXQiLCJkYXRhIiwicmVzZXQiLCJjb25zb2xlIiwibG9nIiwidmFsaWRhdG9yMiIsImVtYWlsMiIsIm5hbWUyIiwicGhvbmUyIiwiX3ZhbGlkYXRvcjIkZXJyb3JNZXNzIiwiX3ZhbGlkYXRvcjIkZXJyb3JNZXNzMyIsIl92YWxpZGF0b3IyJGVycm9yTWVzczUiLCJlcnJvck1lc3NhZ2VFbWFpbCIsIl92YWxpZGF0b3IyJGVycm9yTWVzczIiLCJfdmFsaWRhdG9yMiRlcnJvck1lc3M0IiwiX3ZhbGlkYXRvcjIkZXJyb3JNZXNzNiIsInZhbGlkYXRvcjMiLCJuYW1lMyIsInBob25lMyIsIl92YWxpZGF0b3IzJGVycm9yTWVzcyIsIl92YWxpZGF0b3IzJGVycm9yTWVzczMiLCJib29rIiwib3JkZXJSaWdodE9uZSIsIm9yZGVyUmlnaHRUd28iLCJfdmFsaWRhdG9yMyRlcnJvck1lc3MyIiwiX3ZhbGlkYXRvcjMkZXJyb3JNZXNzNCIsInZhbGlkYXRvcjQiLCJlbWFpbDQiLCJuYW1lNCIsInBob25lNCIsIl92YWxpZGF0b3I0JGVycm9yTWVzcyIsIl92YWxpZGF0b3I0JGVycm9yTWVzczMiLCJfdmFsaWRhdG9yNCRlcnJvck1lc3M1IiwiX3ZhbGlkYXRvcjQkZXJyb3JNZXNzMiIsIl92YWxpZGF0b3I0JGVycm9yTWVzczQiLCJfdmFsaWRhdG9yNCRlcnJvck1lc3M2IiwiY3RsZ0NoYW5nZSIsImN0Z2wiLCJjdGdsQ2hhbmdlT25lIiwiY3RnbENoYW5nZU9uZUJ1dHRvbiIsImN0Z2xDaGFuZ2VUd28iLCJjYWxsYmFja0NoYW5nZSIsImNhbGxiYWNrIiwiY2FsbGJhY2tDaGFuZ2VPbmUiLCJjYWxsYmFja0NoYW5nZU9uZUJ1dHRvbiIsImNhbGxiYWNrQ2hhbmdlVHdvIiwiY2FsbGJhY2tDaGFuZ2VUaW1lIiwiY2FsbGJhY2tDaGFuZ2VOb3ciLCJjYWxsYmFja0Zvcm1PbmUiLCJjYWxsYmFja0Zvcm1Ud28iLCJ2YWxpZGF0b3I1IiwicGhvbmU1IiwiX3ZhbGlkYXRvcjUkZXJyb3JNZXNzIiwiX3ZhbGlkYXRvcjUkZXJyb3JNZXNzMiIsInZhbGlkYXRvcjYiLCJwaG9uZTYiLCJpbmZvNiIsIl92YWxpZGF0b3I2JGVycm9yTWVzcyIsIl92YWxpZGF0b3I2JGVycm9yTWVzczMiLCJlcnJvck1lc3NhZ2VJbmZvIiwiX3ZhbGlkYXRvcjYkZXJyb3JNZXNzMiIsIl92YWxpZGF0b3I2JGVycm9yTWVzczQiLCJvcmRlckNoYW5nZSIsImJvb2tDaGFuZ2VPbmUiLCJib29rQ2hhbmdlT25lQnV0dG9uIiwiYm9va0NoYW5nZVR3byIsIm1pblBvcHVwIiwiYnV0dG9uTGVmdCIsImJ1dHRvbkNlbnRlciIsImJ1dHRvblJpZ2h0Iiwid2luZG93TGVmdCIsIndpbmRvd0NlbnRlciIsIndpbmRvd1JpZ2h0Iiwid2luZG93TGVmdENsb3NlIiwid2luZG93Q2VudGVyQ2xvc2UiLCJ3aW5kb3dSaWdodENsb3NlIiwic3RvcFByb3BhZ2F0aW9uIiwidG9nZ2xlIiwid2luZG93IiwiY291bnRlciIsImxpbWl0IiwiX2xvb3AzIiwiaSIsInBvcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIndpbiIsImlubmVySGVpZ2h0IiwiZGF0YXNldCIsInN0b3AiLCJ4IiwiaW50Iiwic2V0SW50ZXJ2YWwiLCJNYXRoIiwiY2VpbCIsInRvIiwiaW5uZXJUZXh0IiwiY2xlYXJJbnRlcnZhbCIsInRhYiIsInRhYk5hdiIsInRhYkNvbnRlbnQiLCJ0YWJOYW1lIiwic2VsZWN0VGFiTmF2Iiwic2VsZWN0VGFiQ29udGVudCJdLCJzb3VyY2VzIjpbIm1haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3dpcGVyID0gbmV3IFN3aXBlcignLmNhcmQtc3dpcGVyJywge1xuICBmcmVlTW9kZTogdHJ1ZSxcbiAgd2F0Y2hTbGlkZXNQcm9ncmVzczogdHJ1ZSxcblxuICBicmVha3BvaW50czoge1xuICAgIDMyMDoge1xuICAgICAgc3BhY2VCZXR3ZWVuOiAxNCxcbiAgICAgIHNsaWRlc1BlclZpZXc6IDIuNSxcbiAgICB9LFxuICAgIDQwMDoge1xuICAgICAgc3BhY2VCZXR3ZWVuOiAxNCxcbiAgICAgIHNsaWRlc1BlclZpZXc6IDMsXG4gICAgfSxcbiAgICA2NTA6IHtcbiAgICAgIHNwYWNlQmV0d2VlbjogMTAsXG4gICAgICBzbGlkZXNQZXJWaWV3OiA0LFxuICAgIH0sXG4gIH0sXG59KTtcbmNvbnN0IHN3aXBlcjIgPSBuZXcgU3dpcGVyKCcuY2FyZC1zd2lwZXIyJywge1xuICBzcGFjZUJldHdlZW46IDEwLFxuICBuYXZpZ2F0aW9uOiB7XG4gICAgbmV4dEVsOiAnLmNhcmQtc3dpcGVyLWJ1dHRvbi1uZXh0JyxcbiAgICBwcmV2RWw6ICcuY2FyZC1zd2lwZXItYnV0dG9uLXByZXYnLFxuICB9LFxuICB0aHVtYnM6IHtcbiAgICBzd2lwZXIsXG4gIH0sXG59KTtcblxuY29uc3Qgc3dpcGVyMyA9IG5ldyBTd2lwZXIoJy5yZXZpZXdzLXN3aXBlcicsIHtcbiAgbmF2aWdhdGlvbjoge1xuICAgIG5leHRFbDogJy5yZXZpZXdzLXN3aXBlci1idXR0b24tbmV4dCcsXG4gICAgcHJldkVsOiAnLnJldmlld3Mtc3dpcGVyLWJ1dHRvbi1wcmV2JyxcbiAgfSxcbiAgcGFnaW5hdGlvbjoge1xuICAgIGVsOiAnLnN3aXBlci1wYWdpbmF0aW9uJyxcbiAgfSxcbiAgYnJlYWtwb2ludHM6IHtcbiAgICAzMjA6IHtcbiAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgfSxcbiAgICA2MDA6IHtcbiAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICBzcGFjZUJldHdlZW46IDE4LFxuICAgIH0sXG4gICAgNzY4OiB7XG4gICAgICBzbGlkZXNQZXJWaWV3OiAyLFxuICAgICAgc3BhY2VCZXR3ZWVuOiAyNCxcbiAgICB9LFxuICAgIDEwMDA6IHtcbiAgICAgIHNsaWRlc1BlclZpZXc6IDIsXG4gICAgICBzcGFjZUJldHdlZW46IDMyLFxuICAgIH0sXG4gIH0sXG59KTtcblxuY29uc3Qgc3dpcGVyNCA9IG5ldyBTd2lwZXIoJy5jYXRhbG9nLXN3aXBlcicsIHtcbiAgbG9vcDogdHJ1ZSxcbiAgLy8gc3BlZWQ6IDIwMDAsXG4gIGVmZmVjdDogJ2NvdmVyZmxvdycsXG5cbiAgY292ZXJmbG93RWZmZWN0OiB7XG4gICAgcm90YXRlOiAwLFxuICAgIHNsaWRlU2hhZG93czogZmFsc2UsXG4gICAgbW9kaWZpZXI6IDEsXG4gICAgZGVwdGg6IDMwLFxuICB9LFxuICBhdXRvcGxheToge1xuICAgIGRlbGF5OiAzMDAwLFxuICB9LFxuICBicmVha3BvaW50czoge1xuICAgIDMyMDoge1xuICAgICAgc2xpZGVzUGVyVmlldzogMyxcbiAgICAgIHNwYWNlQmV0d2VlbjogMjMsXG4gICAgfSxcbiAgICA3MDA6IHtcbiAgICAgIHNsaWRlc1BlclZpZXc6IDUsXG4gICAgICBzcGFjZUJldHdlZW46IDI2LFxuICAgIH0sXG4gICAgNzY4OiB7XG4gICAgICBzbGlkZXNQZXJWaWV3OiA1LFxuICAgICAgc3BhY2VCZXR3ZWVuOiAzNCxcbiAgICB9LFxuICAgIDEwMDA6IHtcbiAgICAgIHNwYWNlQmV0d2VlbjogNDcsXG4gICAgICBzbGlkZXNQZXJWaWV3OiA1LFxuICAgIH0sXG4gIH0sXG59KTtcblxuY29uc3QgcG9wdXBMaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cC1saW5rJyk7XG5jb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYm9keScpO1xuY29uc3QgbG9ja1BhZGRpbmcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcubG9jay1wYWRkaW5nJyk7XG5cbmxldCB1bmxvY2sgPSB0cnVlO1xuXG5jb25zdCB0aW1lb3V0ID0gNDAwO1xuXG5pZiAocG9wdXBMaW5rcy5sZW5ndGggPiAwKSB7XG4gIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBwb3B1cExpbmtzLmxlbmd0aDsgaW5kZXgrKykge1xuICAgIGNvbnN0IHBvcHVwTGluayA9IHBvcHVwTGlua3NbaW5kZXhdO1xuICAgIHBvcHVwTGluay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBjb25zdCBwb3B1cE5hbWUgPSBwb3B1cExpbmsuZ2V0QXR0cmlidXRlKCdocmVmJykucmVwbGFjZSgnIycsICcnKTtcbiAgICAgIGNvbnN0IGN1cmVudFBvcHVwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocG9wdXBOYW1lKTtcbiAgICAgIHBvcHVwT3BlbihjdXJlbnRQb3B1cCk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gIH1cbn1cbmNvbnN0IHBvcHVwQ2xvc2VJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmNsb3NlLXBvcHVwJyk7XG5pZiAocG9wdXBDbG9zZUljb24ubGVuZ3RoID4gMCkge1xuICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgcG9wdXBDbG9zZUljb24ubGVuZ3RoOyBpbmRleCsrKSB7XG4gICAgY29uc3QgZWwgPSBwb3B1cENsb3NlSWNvbltpbmRleF07XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgcG9wdXBDbG9zZShlbC5jbG9zZXN0KCcucG9wdXAnKSk7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcG9wdXBPcGVuKGN1cmVudFBvcHVwKSB7XG4gIGlmIChjdXJlbnRQb3B1cCAmJiB1bmxvY2spIHtcbiAgICBjb25zdCBwb3B1cEFjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC5vcGVuJyk7XG4gICAgaWYgKHBvcHVwQWN0aXZlKSB7XG4gICAgICBwb3B1cENsb3NlKHBvcHVwQWN0aXZlLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJvZHlMb2NrKCk7XG4gICAgfVxuICAgIGN1cmVudFBvcHVwLmNsYXNzTGlzdC5hZGQoJ29wZW4nKTtcbiAgICBjdXJlbnRQb3B1cC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICBpZiAoIWUudGFyZ2V0LmNsb3Nlc3QoJy5wb3B1cF9fY29udGVudCcpKSB7XG4gICAgICAgIHBvcHVwQ2xvc2UoZS50YXJnZXQuY2xvc2VzdCgnLnBvcHVwJykpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBvcHVwQ2xvc2UocG9wdXBBY3RpdmUsIGRvVW5sb2NrID0gdHJ1ZSkge1xuICBpZiAodW5sb2NrKSB7XG4gICAgcG9wdXBBY3RpdmUuY2xhc3NMaXN0LnJlbW92ZSgnb3BlbicpO1xuICAgIGlmIChkb1VubG9jaykge1xuICAgICAgYm9keVVuTG9jaygpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBib2R5TG9jaygpIHtcbiAgY29uc3QgbG9ja1BhZGRpbmdWYWx1ZSA9IDE3O1xuXG4gIGlmIChsb2NrUGFkZGluZy5sZW5ndGggPiAwKSB7XG4gICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGxvY2tQYWRkaW5nLmxlbmd0aDsgaW5kZXgrKykge1xuICAgICAgY29uc3QgZWwgPSBsb2NrUGFkZGluZ1tpbmRleF07XG4gICAgICBlbC5zdHlsZS5wYWRkaW5nUmlnaHQgPSBsb2NrUGFkZGluZ1ZhbHVlO1xuICAgIH1cbiAgfVxuICBib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9IGxvY2tQYWRkaW5nVmFsdWU7XG4gIGJvZHkuY2xhc3NMaXN0LmFkZCgnbG9jaycpO1xuXG4gIHVubG9jayA9IGZhbHNlO1xuICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICB1bmxvY2sgPSB0cnVlO1xuICB9LCB0aW1lb3V0KTtcbn1cblxuZnVuY3Rpb24gYm9keVVuTG9jaygpIHtcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgaWYgKGxvY2tQYWRkaW5nLmxlbmd0aCA+IDApIHtcbiAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsb2NrUGFkZGluZy5sZW5ndGg7IGluZGV4KyspIHtcbiAgICAgICAgY29uc3QgZWwgPSBsb2NrUGFkZGluZ1tpbmRleF07XG4gICAgICAgIGVsLnN0eWxlLnBhZGRpbmdSaWdodCA9ICcwcHgnO1xuICAgICAgfVxuICAgIH1cbiAgICBib2R5LnN0eWxlLnBhZGRpbmdSaWdodCA9ICcwcHgnO1xuICAgIGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnbG9jaycpO1xuICB9LCB0aW1lb3V0KTtcblxuICB1bmxvY2sgPSBmYWxzZTtcbiAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgdW5sb2NrID0gdHJ1ZTtcbiAgfSwgdGltZW91dCk7XG59XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZSkgPT4ge1xuICBpZiAoZS53aGljaCA9PT0gMjcpIHtcbiAgICBjb25zdCBwb3B1cEFjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC5vcGVuJyk7XG4gICAgcG9wdXBDbG9zZShwb3B1cEFjdGl2ZSk7XG4gIH1cbn0pO1xuXG4oZnVuY3Rpb24gKCkge1xuICAvLyDQv9GA0L7QstC10YDRj9C10Lwg0L/QvtC00LTQtdGA0LbQutGDXG4gIGlmICghRWxlbWVudC5wcm90b3R5cGUuY2xvc2VzdCkge1xuICAgIC8vINGA0LXQsNC70LjQt9GD0LXQvFxuICAgIEVsZW1lbnQucHJvdG90eXBlLmNsb3Nlc3QgPSBmdW5jdGlvbiAoY3NzKSB7XG4gICAgICBsZXQgbm9kZSA9IHRoaXM7XG4gICAgICB3aGlsZSAobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5tYXRjaGVzKGNzcykpIHJldHVybiBub2RlO1xuICAgICAgICBub2RlID0gbm9kZS5wYXJlbnRFbGVtZW50O1xuICAgICAgfVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgfVxufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgLy8g0L/RgNC+0LLQtdGA0Y/QtdC8INC/0L7QtNC00LXRgNC20LrRg1xuICBpZiAoIUVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXMpIHtcbiAgICAvLyDQvtC/0YDQtdC00LXQu9GP0LXQvCDRgdCy0L7QudGB0YLQstC+XG4gICAgRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlcyA9XG4gICAgICBFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzU2VsZWN0b3IgfHxcbiAgICAgIEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fFxuICAgICAgRWxlbWVudC5wcm90b3R5cGUubW96TWF0Y2hlc1NlbGVjdG9yIHx8XG4gICAgICBFbGVtZW50LnByb3RvdHlwZS5tc01hdGNoZXNTZWxlY3RvcjtcbiAgfVxufSkoKTtcblxuY29uc3QgbWFpbGluZ1BvcHVwQ2hhbmdlID0gKCkgPT4ge1xuICBjb25zdCBtYWlsaW5nUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXAnKTtcbiAgbWFpbGluZ1BvcHVwLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBjb25zdCBtYWlsaW5nUmFkaW8gPSBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tYWlsaW5nLWl0ZW0nKTtcbiAgICBjb25zdCBtYWlsaW5nUG9wdXBCdXR0b25FbWFpbCA9IGl0ZW0ucXVlcnlTZWxlY3RvcignLm1haWxpbmctaXRlbS0tZW1haWwnKTtcbiAgICBjb25zdCBtYWlsaW5nUG9wdXBCdXR0b24gPSBpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoJy5tYWlsaW5nLWl0ZW0nKTtcbiAgICBjb25zdCBtYWlsaW5nUG9wdXBJbnB1dCA9IGl0ZW0ucXVlcnlTZWxlY3RvcignLm9yZGVyLWVtYWlsJyk7XG4gICAgY29uc3QgY3RsZ0Zvcm0xID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmN0bGctZm9ybTEnKTtcbiAgICBjb25zdCBjdGxnRm9ybTIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY3RsZy1mb3JtMicpO1xuICAgIGNvbnN0IGJvb2tGb3JtMSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ib29rLWZvcm0xJyk7XG4gICAgY29uc3QgYm9va0Zvcm0yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJvb2stZm9ybTInKTtcbiAgICBtYWlsaW5nUmFkaW8uZm9yRWFjaCgoaXRlbTEpID0+IHtcbiAgICAgIGl0ZW0xLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgbWFpbGluZ1JhZGlvLmZvckVhY2goKGl0ZW0zKSA9PiB7XG4gICAgICAgICAgaXRlbTMuY2xhc3NMaXN0LnJlbW92ZSgnbWFpbGluZy1pdGVtLS1hY3RpdmUnKTtcbiAgICAgICAgICBlLmN1cnJlbnRUYXJnZXQuY2xhc3NMaXN0LmFkZCgnbWFpbGluZy1pdGVtLS1hY3RpdmUnKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAoaXRlbS5jb250YWlucyhtYWlsaW5nUG9wdXBCdXR0b25FbWFpbCkpIHtcbiAgICAgIG1haWxpbmdQb3B1cEJ1dHRvbi5mb3JFYWNoKChpdGVtMikgPT4ge1xuICAgICAgICBpdGVtMi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICBtYWlsaW5nUG9wdXBJbnB1dC5jbGFzc0xpc3QucmVtb3ZlKCdvcmRlci1lbWFpbC0tYWN0aXZlJyk7XG4gICAgICAgICAgYm9va0Zvcm0yLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgYm9va0Zvcm0xLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XG4gICAgICAgICAgY3RsZ0Zvcm0yLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgY3RsZ0Zvcm0xLnN0eWxlLmRpc3BsYXkgPSAnZmxleCc7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgICBtYWlsaW5nUG9wdXBCdXR0b25FbWFpbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgbWFpbGluZ1BvcHVwSW5wdXQuY2xhc3NMaXN0LmFkZCgnb3JkZXItZW1haWwtLWFjdGl2ZScpO1xuICAgICAgICBib29rRm9ybTIuc3R5bGUuZGlzcGxheSA9ICdmbGV4JztcbiAgICAgICAgYm9va0Zvcm0xLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIGN0bGdGb3JtMi5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgICAgICBjdGxnRm9ybTEuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuXG5tYWlsaW5nUG9wdXBDaGFuZ2UoKTtcblxuY29uc3QgdmFsaWRhdG9yMSA9IG5ldyBWYWxpZGF0b3Ioe1xuICBmb3JtOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3RsZy1mb3JtMScpLFxuICBydWxlczoge1xuICAgIG5hbWU6IHtcbiAgICAgIHZhbGlkYXRlOiAodmFsKSA9PiAodmFsID8gJycgOiAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyksXG4gICAgfSxcbiAgICBwaG9uZToge1xuICAgICAgdmFsaWRhdGU6ICh2YWwpID0+ICghdmFsID8gJ9Ce0YjQuNCx0L7Rh9C60LAg0LLRi9GI0LvQsCcgOiAnJyksXG4gICAgfSxcbiAgfSxcbn0pO1xuXG52YWxpZGF0b3IxLmZvcm0ub25zdWJtaXQgPSAoZXZuKSA9PiB7XG4gIGV2bi5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCB2YWx1ZXMgPSB2YWxpZGF0b3IxLmdldFZhbHVlcygpO1xuICBjb25zdCBlcnJvck1lc3NhZ2VOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWVycm9yMS0tbmFtZScpO1xuICBjb25zdCBlcnJvck1lc3NhZ2VQaG9uZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1lcnJvcjEtLXBob25lJyk7XG4gIGNvbnN0IHBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWNhdGFsb2ctZm9ybS10d28nKTtcbiAgaWYgKHZhbGlkYXRvcjE/LmVycm9yTWVzc2FnZXM/Lm5hbWUpIHtcbiAgICBlcnJvck1lc3NhZ2VOYW1lLmlubmVySFRNTCA9IHZhbGlkYXRvcjE/LmVycm9yTWVzc2FnZXM/Lm5hbWU7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2lucHV0LS1lcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yTWVzc2FnZU5hbWUuaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWxpZGF0b3IxPy5lcnJvck1lc3NhZ2VzPy5waG9uZSkge1xuICAgIGVycm9yTWVzc2FnZVBob25lLmlubmVySFRNTCA9IHZhbGlkYXRvcjE/LmVycm9yTWVzc2FnZXM/LnBob25lO1xuICAgIGVycm9yTWVzc2FnZVBob25lLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnaW5wdXQtLWVycm9yJyk7XG4gIH0gZWxzZSB7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUuaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QucmVtb3ZlKCdpbnB1dC0tZXJyb3InKTtcbiAgfVxuICBpZiAodmFsdWVzLm5hbWUgJiYgdmFsdWVzLnBob25lKSB7XG4gICAgcGFnZXMuY2xhc3NMaXN0LnJlbW92ZSgnY3RsZy1zbGlkZS0tYWN0aXZlJyk7XG4gICAgcGFnZXMubmV4dEVsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2N0bGctc2xpZGUtLWFjdGl2ZScpO1xuICB9XG59O1xuXG52YWxpZGF0b3IxLmZvcm0ub25yZXNldCA9IChldm4pID0+IHtcbiAgY29uc3QgZGF0YSA9IHZhbGlkYXRvcjEucmVzZXQoKTtcbiAgY29uc29sZS5sb2coZGF0YSk7XG59O1xuXG5jb25zdCB2YWxpZGF0b3IyID0gbmV3IFZhbGlkYXRvcih7XG4gIGZvcm06IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdGxnLWZvcm0yJyksXG4gIHJ1bGVzOiB7XG4gICAgZW1haWwyOiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKHZhbCA/ICcnIDogJ9Ce0YjQuNCx0L7Rh9C60LAg0LLRi9GI0LvQsCcpLFxuICAgIH0sXG4gICAgbmFtZTI6IHtcbiAgICAgIHZhbGlkYXRlOiAodmFsKSA9PiAodmFsID8gJycgOiAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyksXG4gICAgfSxcbiAgICBwaG9uZTI6IHtcbiAgICAgIHZhbGlkYXRlOiAodmFsKSA9PiAoIXZhbCA/ICfQntGI0LjQsdC+0YfQutCwINCy0YvRiNC70LAnIDogJycpLFxuICAgIH0sXG4gIH0sXG59KTtcblxudmFsaWRhdG9yMi5mb3JtLm9uc3VibWl0ID0gKGV2bikgPT4ge1xuICBldm4ucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgdmFsdWVzID0gdmFsaWRhdG9yMi5nZXRWYWx1ZXMoKTtcbiAgY29uc3QgZXJyb3JNZXNzYWdlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1lcnJvcjItLW5hbWUnKTtcbiAgY29uc3QgZXJyb3JNZXNzYWdlUGhvbmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5wdXQtZXJyb3IyLS1waG9uZScpO1xuICBjb25zdCBlcnJvck1lc3NhZ2VFbWFpbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1lcnJvcjItLWVtYWlsJyk7XG4gIGNvbnN0IHBhZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWNhdGFsb2ctZm9ybS10d28nKTtcbiAgaWYgKHZhbGlkYXRvcjI/LmVycm9yTWVzc2FnZXM/Lm5hbWUyKSB7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5pbm5lckhUTUwgPSB2YWxpZGF0b3IyPy5lcnJvck1lc3NhZ2VzPy5uYW1lMjtcbiAgICBlcnJvck1lc3NhZ2VOYW1lLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnaW5wdXQtLWVycm9yJyk7XG4gIH0gZWxzZSB7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5pbm5lckhUTUwgPSAnJztcbiAgICBlcnJvck1lc3NhZ2VOYW1lLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnJlbW92ZSgnaW5wdXQtLWVycm9yJyk7XG4gIH1cbiAgaWYgKHZhbGlkYXRvcjI/LmVycm9yTWVzc2FnZXM/LnBob25lMikge1xuICAgIGVycm9yTWVzc2FnZVBob25lLmlubmVySFRNTCA9IHZhbGlkYXRvcjI/LmVycm9yTWVzc2FnZXM/LnBob25lMjtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2lucHV0LS1lcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yTWVzc2FnZVBob25lLmlubmVySFRNTCA9ICcnO1xuICAgIGVycm9yTWVzc2FnZVBob25lLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnJlbW92ZSgnaW5wdXQtLWVycm9yJyk7XG4gIH1cbiAgaWYgKHZhbGlkYXRvcjI/LmVycm9yTWVzc2FnZXM/LmVtYWlsMikge1xuICAgIGVycm9yTWVzc2FnZUVtYWlsLmlubmVySFRNTCA9IHZhbGlkYXRvcjI/LmVycm9yTWVzc2FnZXM/LmVtYWlsMjtcbiAgICBlcnJvck1lc3NhZ2VFbWFpbC5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2lucHV0LS1lcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yTWVzc2FnZUVtYWlsLmlubmVySFRNTCA9ICcnO1xuICAgIGVycm9yTWVzc2FnZUVtYWlsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LnJlbW92ZSgnaW5wdXQtLWVycm9yJyk7XG4gIH1cbiAgaWYgKHZhbHVlcy5uYW1lMiAmJiB2YWx1ZXMucGhvbmUyICYmIHZhbHVlcy5lbWFpbDIpIHtcbiAgICBwYWdlcy5jbGFzc0xpc3QucmVtb3ZlKCdjdGxnLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBwYWdlcy5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnY3RsZy1zbGlkZS0tYWN0aXZlJyk7XG4gIH1cbn07XG5cbnZhbGlkYXRvcjIuZm9ybS5vbnJlc2V0ID0gKGV2bikgPT4ge1xuICBjb25zdCBkYXRhID0gdmFsaWRhdG9yMi5yZXNldCgpO1xuICBjb25zb2xlLmxvZyhkYXRhKTtcbn07XG5cbmNvbnN0IHZhbGlkYXRvcjMgPSBuZXcgVmFsaWRhdG9yKHtcbiAgZm9ybTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Jvb2stZm9ybTEnKSxcbiAgcnVsZXM6IHtcbiAgICBuYW1lMzoge1xuICAgICAgdmFsaWRhdGU6ICh2YWwpID0+ICh2YWwgPyAnJyA6ICfQntGI0LjQsdC+0YfQutCwINCy0YvRiNC70LAnKSxcbiAgICB9LFxuICAgIHBob25lMzoge1xuICAgICAgdmFsaWRhdGU6ICh2YWwpID0+ICghdmFsID8gJ9Ce0YjQuNCx0L7Rh9C60LAg0LLRi9GI0LvQsCcgOiAnJyksXG4gICAgfSxcbiAgfSxcbn0pO1xuXG52YWxpZGF0b3IzLmZvcm0ub25zdWJtaXQgPSAoZXZuKSA9PiB7XG4gIGV2bi5wcmV2ZW50RGVmYXVsdCgpO1xuICBjb25zdCB2YWx1ZXMgPSB2YWxpZGF0b3IzLmdldFZhbHVlcygpO1xuICBjb25zdCBlcnJvck1lc3NhZ2VOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWVycm9yMy0tbmFtZScpO1xuICBjb25zdCBlcnJvck1lc3NhZ2VQaG9uZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1lcnJvcjMtLXBob25lJyk7XG4gIGNvbnN0IGJvb2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtb3JkZXInKTtcbiAgY29uc3Qgb3JkZXJSaWdodE9uZSA9IGJvb2sucXVlcnlTZWxlY3RvcignLm9yZGVyLWhlYWRlci0tb25lJyk7XG4gIGNvbnN0IG9yZGVyUmlnaHRUd28gPSBib29rLnF1ZXJ5U2VsZWN0b3IoJy5vcmRlci1oZWFkZXItLXR3bycpO1xuICBjb25zdCBwYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1ib29rLWZvcm0tdHdvJyk7XG4gIGlmICh2YWxpZGF0b3IzPy5lcnJvck1lc3NhZ2VzPy5uYW1lMykge1xuICAgIGVycm9yTWVzc2FnZU5hbWUuaW5uZXJIVE1MID0gdmFsaWRhdG9yMz8uZXJyb3JNZXNzYWdlcz8ubmFtZTM7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2lucHV0LS1lcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yTWVzc2FnZU5hbWUuaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlTmFtZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWxpZGF0b3IzPy5lcnJvck1lc3NhZ2VzPy5waG9uZTMpIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSB2YWxpZGF0b3IzPy5lcnJvck1lc3NhZ2VzPy5waG9uZTM7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdpbnB1dC0tZXJyb3InKTtcbiAgfSBlbHNlIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSAnJztcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWx1ZXMubmFtZTMgJiYgdmFsdWVzLnBob25lMykge1xuICAgIHBhZ2VzLmNsYXNzTGlzdC5yZW1vdmUoJ2Jvb2stc2xpZGUtLWFjdGl2ZScpO1xuICAgIHBhZ2VzLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdib29rLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBvcmRlclJpZ2h0VHdvLmNsYXNzTGlzdC5yZW1vdmUoJ29yZGVyLWhlYWRlci0tYWN0aXZlJyk7XG4gICAgb3JkZXJSaWdodFR3by5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnb3JkZXItaGVhZGVyLS1hY3RpdmUnKTtcbiAgfVxufTtcblxudmFsaWRhdG9yMy5mb3JtLm9ucmVzZXQgPSAoZXZuKSA9PiB7XG4gIGNvbnN0IGRhdGEgPSB2YWxpZGF0b3IzLnJlc2V0KCk7XG4gIGNvbnNvbGUubG9nKGRhdGEpO1xufTtcblxuY29uc3QgdmFsaWRhdG9yNCA9IG5ldyBWYWxpZGF0b3Ioe1xuICBmb3JtOiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYm9vay1mb3JtMicpLFxuICBydWxlczoge1xuICAgIGVtYWlsNDoge1xuICAgICAgdmFsaWRhdGU6ICh2YWwpID0+ICh2YWwgPyAnJyA6ICfQntGI0LjQsdC+0YfQutCwINCy0YvRiNC70LAnKSxcbiAgICB9LFxuICAgIG5hbWU0OiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKHZhbCA/ICcnIDogJ9Ce0YjQuNCx0L7Rh9C60LAg0LLRi9GI0LvQsCcpLFxuICAgIH0sXG4gICAgcGhvbmU0OiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKCF2YWwgPyAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyA6ICcnKSxcbiAgICB9LFxuICB9LFxufSk7XG5cbnZhbGlkYXRvcjQuZm9ybS5vbnN1Ym1pdCA9IChldm4pID0+IHtcbiAgZXZuLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHZhbHVlcyA9IHZhbGlkYXRvcjQuZ2V0VmFsdWVzKCk7XG4gIGNvbnN0IGVycm9yTWVzc2FnZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5wdXQtZXJyb3I0LS1uYW1lJyk7XG4gIGNvbnN0IGVycm9yTWVzc2FnZVBob25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWVycm9yNC0tcGhvbmUnKTtcbiAgY29uc3QgZXJyb3JNZXNzYWdlRW1haWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaW5wdXQtZXJyb3I0LS1lbWFpbCcpO1xuICBjb25zdCBib29rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLW9yZGVyJyk7XG4gIGNvbnN0IG9yZGVyUmlnaHRPbmUgPSBib29rLnF1ZXJ5U2VsZWN0b3IoJy5vcmRlci1oZWFkZXItLW9uZScpO1xuICBjb25zdCBvcmRlclJpZ2h0VHdvID0gYm9vay5xdWVyeVNlbGVjdG9yKCcub3JkZXItaGVhZGVyLS10d28nKTtcbiAgY29uc3QgcGFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtYm9vay1mb3JtLXR3bycpO1xuICBpZiAodmFsaWRhdG9yND8uZXJyb3JNZXNzYWdlcz8ubmFtZTQpIHtcbiAgICBlcnJvck1lc3NhZ2VOYW1lLmlubmVySFRNTCA9IHZhbGlkYXRvcjQ/LmVycm9yTWVzc2FnZXM/Lm5hbWU0O1xuICAgIGVycm9yTWVzc2FnZU5hbWUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdpbnB1dC0tZXJyb3InKTtcbiAgfSBlbHNlIHtcbiAgICBlcnJvck1lc3NhZ2VOYW1lLmlubmVySFRNTCA9ICcnO1xuICAgIGVycm9yTWVzc2FnZU5hbWUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QucmVtb3ZlKCdpbnB1dC0tZXJyb3InKTtcbiAgfVxuICBpZiAodmFsaWRhdG9yND8uZXJyb3JNZXNzYWdlcz8ucGhvbmU0KSB7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUuaW5uZXJIVE1MID0gdmFsaWRhdG9yND8uZXJyb3JNZXNzYWdlcz8ucGhvbmU0O1xuICAgIGVycm9yTWVzc2FnZVBob25lLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnaW5wdXQtLWVycm9yJyk7XG4gIH0gZWxzZSB7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUuaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QucmVtb3ZlKCdpbnB1dC0tZXJyb3InKTtcbiAgfVxuICBpZiAodmFsaWRhdG9yND8uZXJyb3JNZXNzYWdlcz8uZW1haWw0KSB7XG4gICAgZXJyb3JNZXNzYWdlRW1haWwuaW5uZXJIVE1MID0gdmFsaWRhdG9yND8uZXJyb3JNZXNzYWdlcz8uZW1haWw0O1xuICAgIGVycm9yTWVzc2FnZUVtYWlsLnByZXZpb3VzRWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnaW5wdXQtLWVycm9yJyk7XG4gIH0gZWxzZSB7XG4gICAgZXJyb3JNZXNzYWdlRW1haWwuaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlRW1haWwucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QucmVtb3ZlKCdpbnB1dC0tZXJyb3InKTtcbiAgfVxuICBpZiAodmFsdWVzLm5hbWU0ICYmIHZhbHVlcy5waG9uZTQgJiYgdmFsdWVzLmVtYWlsNCkge1xuICAgIHBhZ2VzLmNsYXNzTGlzdC5yZW1vdmUoJ2Jvb2stc2xpZGUtLWFjdGl2ZScpO1xuICAgIHBhZ2VzLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdib29rLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBvcmRlclJpZ2h0VHdvLmNsYXNzTGlzdC5yZW1vdmUoJ29yZGVyLWhlYWRlci0tYWN0aXZlJyk7XG4gICAgb3JkZXJSaWdodFR3by5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnb3JkZXItaGVhZGVyLS1hY3RpdmUnKTtcbiAgfVxufTtcblxudmFsaWRhdG9yNC5mb3JtLm9ucmVzZXQgPSAoZXZuKSA9PiB7XG4gIGNvbnN0IGRhdGEgPSB2YWxpZGF0b3I0LnJlc2V0KCk7XG4gIGNvbnNvbGUubG9nKGRhdGEpO1xufTtcblxuY29uc3QgY3RsZ0NoYW5nZSA9ICgpID0+IHtcbiAgY29uc3QgY3RnbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1jYXRhbG9nJyk7XG4gIGNvbnN0IGN0Z2xDaGFuZ2VPbmUgPSBjdGdsLnF1ZXJ5U2VsZWN0b3IoJy5jdGxnLXNsaWRlLS1vbmUnKTtcbiAgY29uc3QgY3RnbENoYW5nZU9uZUJ1dHRvbiA9IGN0Z2xDaGFuZ2VPbmUucXVlcnlTZWxlY3RvcignLmJ1dHRvbicpO1xuICBjb25zdCBjdGdsQ2hhbmdlVHdvID0gY3RnbC5xdWVyeVNlbGVjdG9yKCcuY3RsZy1zbGlkZS0tdHdvJyk7XG4gIGN0Z2xDaGFuZ2VPbmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgY3RnbENoYW5nZU9uZS5jbGFzc0xpc3QucmVtb3ZlKCdjdGxnLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBjdGdsQ2hhbmdlVHdvLmNsYXNzTGlzdC5hZGQoJ2N0bGctc2xpZGUtLWFjdGl2ZScpO1xuICB9KTtcbn07XG5cbmN0bGdDaGFuZ2UoKTtcblxuY29uc3QgY2FsbGJhY2tDaGFuZ2UgPSAoKSA9PiB7XG4gIGNvbnN0IGNhbGxiYWNrID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwLWNhbGxiYWNrJyk7XG4gIGNvbnN0IGNhbGxiYWNrQ2hhbmdlT25lID0gY2FsbGJhY2sucXVlcnlTZWxlY3RvcignLmNhbGxiYWNrLXNsaWRlLS1vbmUnKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VPbmVCdXR0b24gPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uJyk7XG4gIGNvbnN0IGNhbGxiYWNrQ2hhbmdlVHdvID0gY2FsbGJhY2sucXVlcnlTZWxlY3RvcignLmNhbGxiYWNrLXNsaWRlLS10d28nKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VUaW1lID0gY2FsbGJhY2sucXVlcnlTZWxlY3RvcignLmNhbGxiYWNrLXRhYnNfX2J1dHRvbi0tdGltZScpO1xuICBjb25zdCBjYWxsYmFja0NoYW5nZU5vdyA9IGNhbGxiYWNrLnF1ZXJ5U2VsZWN0b3IoJy5jYWxsYmFjay10YWJzX19idXR0b24tLW5vdycpO1xuICBjb25zdCBjYWxsYmFja0Zvcm1PbmUgPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuY2FsbGJhY2stZm9ybTEnKTtcbiAgY29uc3QgY2FsbGJhY2tGb3JtVHdvID0gY2FsbGJhY2sucXVlcnlTZWxlY3RvcignLmNhbGxiYWNrLWZvcm0yJyk7XG5cbiAgY2FsbGJhY2tDaGFuZ2VUaW1lLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIGNhbGxiYWNrRm9ybU9uZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIGNhbGxiYWNrRm9ybVR3by5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgfSk7XG5cbiAgY2FsbGJhY2tDaGFuZ2VOb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgY2FsbGJhY2tGb3JtT25lLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIGNhbGxiYWNrRm9ybVR3by5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9KTtcbn07XG5cbmNhbGxiYWNrQ2hhbmdlKCk7XG5cbmNvbnN0IHZhbGlkYXRvcjUgPSBuZXcgVmFsaWRhdG9yKHtcbiAgZm9ybTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbGxiYWNrLWZvcm0xJyksXG4gIHJ1bGVzOiB7XG4gICAgcGhvbmU1OiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKCF2YWwgPyAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyA6ICcnKSxcbiAgICB9LFxuICB9LFxufSk7XG5cbnZhbGlkYXRvcjUuZm9ybS5vbnN1Ym1pdCA9IChldm4pID0+IHtcbiAgZXZuLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHZhbHVlcyA9IHZhbGlkYXRvcjUuZ2V0VmFsdWVzKCk7XG4gIGNvbnN0IGVycm9yTWVzc2FnZVBob25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWVycm9yNS0tcGhvbmUnKTtcbiAgY29uc3QgY2FsbGJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtY2FsbGJhY2snKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VPbmUgPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuY2FsbGJhY2stc2xpZGUtLW9uZScpO1xuICBjb25zdCBjYWxsYmFja0NoYW5nZU9uZUJ1dHRvbiA9IGNhbGxiYWNrLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24nKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VUd28gPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuY2FsbGJhY2stc2xpZGUtLXR3bycpO1xuXG4gIGlmICh2YWxpZGF0b3I1Py5lcnJvck1lc3NhZ2VzPy5waG9uZTUpIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSB2YWxpZGF0b3I1Py5lcnJvck1lc3NhZ2VzPy5waG9uZTU7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdpbnB1dC0tZXJyb3InKTtcbiAgfSBlbHNlIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSAnJztcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWx1ZXMucGhvbmU1KSB7XG4gICAgY2FsbGJhY2tDaGFuZ2VPbmUuY2xhc3NMaXN0LnJlbW92ZSgnY2FsbGJhY2stc2xpZGUtLWFjdGl2ZScpO1xuICAgIGNhbGxiYWNrQ2hhbmdlT25lLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdjYWxsYmFjay1zbGlkZS0tYWN0aXZlJyk7XG4gIH1cbn07XG5cbnZhbGlkYXRvcjUuZm9ybS5vbnJlc2V0ID0gKGV2bikgPT4ge1xuICBjb25zdCBkYXRhID0gdmFsaWRhdG9yNS5yZXNldCgpO1xuICBjb25zb2xlLmxvZyhkYXRhKTtcbn07XG5cbmNvbnN0IHZhbGlkYXRvcjYgPSBuZXcgVmFsaWRhdG9yKHtcbiAgZm9ybTogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbGxiYWNrLWZvcm0yJyksXG4gIHJ1bGVzOiB7XG4gICAgcGhvbmU2OiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKCF2YWwgPyAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyA6ICcnKSxcbiAgICB9LFxuICAgIGluZm82OiB7XG4gICAgICB2YWxpZGF0ZTogKHZhbCkgPT4gKCF2YWwgPyAn0J7RiNC40LHQvtGH0LrQsCDQstGL0YjQu9CwJyA6ICcnKSxcbiAgICB9LFxuICB9LFxufSk7XG5cbnZhbGlkYXRvcjYuZm9ybS5vbnN1Ym1pdCA9IChldm4pID0+IHtcbiAgZXZuLnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IHZhbHVlcyA9IHZhbGlkYXRvcjYuZ2V0VmFsdWVzKCk7XG4gIGNvbnN0IGVycm9yTWVzc2FnZVBob25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWVycm9yNi0tcGhvbmUnKTtcbiAgY29uc3QgZXJyb3JNZXNzYWdlSW5mbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1lcnJvcjYtLWluZm8nKTtcbiAgY29uc3QgY2FsbGJhY2sgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXAtY2FsbGJhY2snKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VPbmUgPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuY2FsbGJhY2stc2xpZGUtLW9uZScpO1xuICBjb25zdCBjYWxsYmFja0NoYW5nZU9uZUJ1dHRvbiA9IGNhbGxiYWNrLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24nKTtcbiAgY29uc3QgY2FsbGJhY2tDaGFuZ2VUd28gPSBjYWxsYmFjay5xdWVyeVNlbGVjdG9yKCcuY2FsbGJhY2stc2xpZGUtLXR3bycpO1xuXG4gIGlmICh2YWxpZGF0b3I2Py5lcnJvck1lc3NhZ2VzPy5waG9uZTYpIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSB2YWxpZGF0b3I2Py5lcnJvck1lc3NhZ2VzPy5waG9uZTY7XG4gICAgZXJyb3JNZXNzYWdlUGhvbmUucHJldmlvdXNFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdpbnB1dC0tZXJyb3InKTtcbiAgfSBlbHNlIHtcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5pbm5lckhUTUwgPSAnJztcbiAgICBlcnJvck1lc3NhZ2VQaG9uZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWxpZGF0b3I2Py5lcnJvck1lc3NhZ2VzPy5pbmZvNikge1xuICAgIGVycm9yTWVzc2FnZUluZm8uaW5uZXJIVE1MID0gdmFsaWRhdG9yNj8uZXJyb3JNZXNzYWdlcz8uaW5mbzY7XG4gICAgZXJyb3JNZXNzYWdlSW5mby5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5hZGQoJ2lucHV0LS1lcnJvcicpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yTWVzc2FnZUluZm8uaW5uZXJIVE1MID0gJyc7XG4gICAgZXJyb3JNZXNzYWdlSW5mby5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLmNsYXNzTGlzdC5yZW1vdmUoJ2lucHV0LS1lcnJvcicpO1xuICB9XG4gIGlmICh2YWx1ZXMucGhvbmU2ICYmIHZhbHVlcy5pbmZvNikge1xuICAgIGNhbGxiYWNrQ2hhbmdlT25lLmNsYXNzTGlzdC5yZW1vdmUoJ2NhbGxiYWNrLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBjYWxsYmFja0NoYW5nZU9uZS5uZXh0RWxlbWVudFNpYmxpbmcuY2xhc3NMaXN0LmFkZCgnY2FsbGJhY2stc2xpZGUtLWFjdGl2ZScpO1xuICB9XG59O1xuXG52YWxpZGF0b3I1LmZvcm0ub25yZXNldCA9IChldm4pID0+IHtcbiAgY29uc3QgZGF0YSA9IHZhbGlkYXRvcjUucmVzZXQoKTtcbiAgY29uc29sZS5sb2coZGF0YSk7XG59O1xuXG5jb25zdCBvcmRlckNoYW5nZSA9ICgpID0+IHtcbiAgY29uc3QgYm9vayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1vcmRlcicpO1xuICBjb25zdCBib29rQ2hhbmdlT25lID0gYm9vay5xdWVyeVNlbGVjdG9yKCcuYm9vay1zbGlkZS0tb25lJyk7XG4gIGNvbnN0IGJvb2tDaGFuZ2VPbmVCdXR0b24gPSBib29rQ2hhbmdlT25lLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24nKTtcbiAgY29uc3QgYm9va0NoYW5nZVR3byA9IGJvb2sucXVlcnlTZWxlY3RvcignLmJvb2stc2xpZGUtLXR3bycpO1xuICBjb25zdCBvcmRlclJpZ2h0T25lID0gYm9vay5xdWVyeVNlbGVjdG9yKCcub3JkZXItaGVhZGVyLS1vbmUnKTtcbiAgY29uc3Qgb3JkZXJSaWdodFR3byA9IGJvb2sucXVlcnlTZWxlY3RvcignLm9yZGVyLWhlYWRlci0tdHdvJyk7XG4gIGJvb2tDaGFuZ2VPbmVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgYm9va0NoYW5nZU9uZS5jbGFzc0xpc3QucmVtb3ZlKCdib29rLXNsaWRlLS1hY3RpdmUnKTtcbiAgICBib29rQ2hhbmdlVHdvLmNsYXNzTGlzdC5hZGQoJ2Jvb2stc2xpZGUtLWFjdGl2ZScpO1xuICAgIG9yZGVyUmlnaHRPbmUuY2xhc3NMaXN0LnJlbW92ZSgnb3JkZXItaGVhZGVyLS1hY3RpdmUnKTtcbiAgICBvcmRlclJpZ2h0T25lLm5leHRFbGVtZW50U2libGluZy5jbGFzc0xpc3QuYWRkKCdvcmRlci1oZWFkZXItLWFjdGl2ZScpO1xuICB9KTtcbn07XG5cbm9yZGVyQ2hhbmdlKCk7XG5cbmNvbnN0IG1pblBvcHVwID0gKCkgPT4ge1xuICBjb25zdCBidXR0b25MZWZ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1wbHVzLS1sZWZ0Jyk7XG4gIGNvbnN0IGJ1dHRvbkNlbnRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5idXR0b24tcGx1cy0tY2VudGVyJyk7XG4gIGNvbnN0IGJ1dHRvblJpZ2h0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmJ1dHRvbi1wbHVzLS1yaWdodCcpO1xuICBjb25zdCB3aW5kb3dMZWZ0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndpbmRvdy0tbGVmdCcpO1xuICBjb25zdCB3aW5kb3dDZW50ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2luZG93LS1jZW50ZXInKTtcbiAgY29uc3Qgd2luZG93UmlnaHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2luZG93LS1yaWdodCcpO1xuICBjb25zdCB3aW5kb3dMZWZ0Q2xvc2UgPSB3aW5kb3dMZWZ0LnF1ZXJ5U2VsZWN0b3IoJy53aW5kb3dfX2Nsb3NlJyk7XG4gIGNvbnN0IHdpbmRvd0NlbnRlckNsb3NlID0gd2luZG93Q2VudGVyLnF1ZXJ5U2VsZWN0b3IoJy53aW5kb3dfX2Nsb3NlJyk7XG4gIGNvbnN0IHdpbmRvd1JpZ2h0Q2xvc2UgPSB3aW5kb3dSaWdodC5xdWVyeVNlbGVjdG9yKCcud2luZG93X19jbG9zZScpO1xuXG4gIGJ1dHRvbkxlZnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgd2luZG93TGVmdC5jbGFzc0xpc3QudG9nZ2xlKCd3aW5kb3ctLWFjdGl2ZScpO1xuXG4gICAgd2luZG93TGVmdENsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgd2luZG93TGVmdC5jbGFzc0xpc3QucmVtb3ZlKCd3aW5kb3ctLWFjdGl2ZScpO1xuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgd2luZG93TGVmdC5jbGFzc0xpc3QucmVtb3ZlKCd3aW5kb3ctLWFjdGl2ZScpO1xuICAgIH0pO1xuICB9KTtcblxuICBidXR0b25DZW50ZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgd2luZG93Q2VudGVyLmNsYXNzTGlzdC50b2dnbGUoJ3dpbmRvdy0tYWN0aXZlJyk7XG5cbiAgICB3aW5kb3dDZW50ZXJDbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHdpbmRvd0NlbnRlci5jbGFzc0xpc3QucmVtb3ZlKCd3aW5kb3ctLWFjdGl2ZScpO1xuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgd2luZG93Q2VudGVyLmNsYXNzTGlzdC5yZW1vdmUoJ3dpbmRvdy0tYWN0aXZlJyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGJ1dHRvblJpZ2h0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbihlKTtcbiAgICB3aW5kb3dSaWdodC5jbGFzc0xpc3QudG9nZ2xlKCd3aW5kb3ctLWFjdGl2ZScpO1xuXG4gICAgd2luZG93UmlnaHRDbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHdpbmRvd1JpZ2h0LmNsYXNzTGlzdC5yZW1vdmUoJ3dpbmRvdy0tYWN0aXZlJyk7XG4gICAgfSk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB3aW5kb3dSaWdodC5jbGFzc0xpc3QucmVtb3ZlKCd3aW5kb3ctLWFjdGl2ZScpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbm1pblBvcHVwKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIGxldCBjb3VudGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLm51bWJlcicpO1xuICBsZXQgbGltaXQgPSAwOyAvLyDQn9C10YDQtdC80LXQvdC90LDRjywg0YfRgtC+0LHRiyDQvtGB0YLQsNC90LDQstC70LjQstCw0YLRjCDRhNGD0L3QutGG0LjRjiwg0LrQvtCz0LTQsCDQstGB0ZEg0LfQsNC/0YPRgdGC0LjRgtGB0Y8uXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGxpbWl0ID09IGNvdW50ZXIubGVuZ3RoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudGVyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBsZXQgcG9zID0gY291bnRlcltpXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7IC8v0J/QvtC30LjRhtC40Y8g0LHQu9C+0LrQsCwg0YHRh9C40YLQsNGPINGB0LLQtdGA0YXRgyDQvtC60L3QsFxuICAgICAgbGV0IHdpbiA9IHdpbmRvdy5pbm5lckhlaWdodCAtIDQwOyAvLyDQndCwIDQwINC/0LjQutGB0LXQu9C10Lkg0LzQtdC90YzRiNC1LCDRh9C10Lwg0LLRi9GB0L7RgtCwINC+0LrQvdCwXG4gICAgICBpZiAocG9zIDwgd2luICYmIGNvdW50ZXJbaV0uZGF0YXNldC5zdG9wID09PSAnMCcpIHtcbiAgICAgICAgY291bnRlcltpXS5kYXRhc2V0LnN0b3AgPSAxOyAvLyDQntGB0YLQsNC90LDQstC70LjQstCw0LXQvCDQv9C10YDQtdC30LDQv9GD0YHQuiDRgdGH0LXRgtCwINCyINGN0YLQvtC8INCx0LvQvtC60LVcbiAgICAgICAgbGV0IHggPSAwO1xuICAgICAgICBsaW1pdCsrOyAvLyDQodGH0LXRgtGH0LjQuiDQsdGD0LTQtdGCINC30LDQv9GD0YnQtdC9LCDRg9Cy0LXQu9C40YfQuNCy0LDQtdC8INC/0LXRgNC10LzQtdC90L3Rg9GOINC90LAgMVxuICAgICAgICBsZXQgaW50ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIC8vINCg0LDQtyDQsiA2MCDQvNC40LvQu9C40YHQtdC60YPQvdC0INCx0YPQtNC10YIg0L/RgNC40LHQsNCy0LvRj9GC0YzRgdGPIDUwLdGPINGH0LDRgdGC0Ywg0L3Rg9C20L3QvtCz0L4g0YfQuNGB0LvQsFxuICAgICAgICAgIHggPSB4ICsgTWF0aC5jZWlsKGNvdW50ZXJbaV0uZGF0YXNldC50byAvIDUwKTtcbiAgICAgICAgICBjb3VudGVyW2ldLmlubmVyVGV4dCA9IHg7XG4gICAgICAgICAgaWYgKHggPiBjb3VudGVyW2ldLmRhdGFzZXQudG8pIHtcbiAgICAgICAgICAgIC8v0JrQsNC6INGC0L7Qu9GM0LrQviDQtNC+0YHRh9C40YLQsNC70LggLSDRgdGC0LjRgNCw0LXQvCDQuNC90YLQtdGA0LLQsNC7LlxuICAgICAgICAgICAgY291bnRlcltpXS5pbm5lclRleHQgPSBjb3VudGVyW2ldLmRhdGFzZXQudG87XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCA2MCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn0pKCk7XG5cbmNvbnN0IHRhYiA9IGZ1bmN0aW9uICgpIHtcbiAgbGV0IHRhYk5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50YWJzLW5hdl9faXRlbScpLCAvLyDQktGL0LHQuNGA0LDQtdC8INGN0LvQtdC80LXQvdGC0Ysg0L3QsNCy0LjQs9Cw0YbQuNC4INGC0LDQsdC+0LJcbiAgICB0YWJDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnRhYnMtY29udGVudF9faXRlbScpLCAvLyDQktGL0LHQuNGA0LDQtdC8INGB0LDQvNGLINGC0LDQsdGLXG4gICAgdGFiTmFtZTsgLy8g0J/QtdGA0LXQvNC10L3QvdCw0Y8g0LTQu9GPINC40LzQtdC90Lgg0YLQsNCx0LBcblxuICAvLyDQn9GA0L7RhdC+0LTQuNC8INGG0LjQutC70L7QvCDQv9C+INC60LDQttC00L7QvNGDINGN0LvQtdC80LXQvdGC0YMg0L3QsNCy0LjQs9Cw0YbQuNC4INC4INC90LDQstC10YjQuNCy0LDQtdC8INC+0LHRgNCw0LHQvtGC0YfQuNC6INC60LvQuNC60LAsINC60L7RgtC+0YDRi9C5INCy0YvQt9GL0LLQsNC10YIg0YTRg9C90LrRhtC40Y4gc2VsZWN0VGFiTmF2XG4gIHRhYk5hdi5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNlbGVjdFRhYk5hdik7XG4gIH0pO1xuXG4gIGZ1bmN0aW9uIHNlbGVjdFRhYk5hdigpIHtcbiAgICB0YWJOYXYuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgLy8g0KPQtNCw0LvRj9C10Lwg0LDQutGC0LjQstC90YvQuSDQutC70LDRgdGBINGDINCy0YHQtdGFINGN0LvQtdC80LXQvdGC0L7QsiDQvdCw0LLQuNCz0LDRhtC40Lgg0YLQsNCx0L7QslxuICAgICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKCd0YWJzLW5hdl9faXRlbS0tYWN0aXZlJyk7XG4gICAgfSk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKCd0YWJzLW5hdl9faXRlbS0tYWN0aXZlJyk7IC8vINCU0L7QsdCw0LLQu9GP0LXQvCDQsNC60YLQuNCy0L3Ri9C5INGD0LrQu9Cw0YHRgSDRgyDRjdC70LXQvNC10L3RgtCwINC/0L4g0LrQvtGC0L7RgNC+0LzRgyDQutC70LjQutC90YPQu9C4XG4gICAgdGFiTmFtZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCdkYXRhLXRhYi1uYW1lJyk7IC8vINCf0L7Qu9GD0YfQsNC10Lwg0LjQvNGPINGC0LDQsdCwLCDQutC+0YLQvtGA0YvQuSDQvdCw0Lwg0L3Rg9C20LXQvVxuICAgIHNlbGVjdFRhYkNvbnRlbnQodGFiTmFtZSk7IC8vINCX0LDQv9GD0YHQutCw0LXQvCDRhNGD0L3QutGG0LjRjiwg0YfRgtC+0LHRiyDQv9C+0LrQsNC30LDRgtGMINCy0YvQsdGA0LDQvdC90YvQuSDRgtCw0LFcbiAgfVxuXG4gIGZ1bmN0aW9uIHNlbGVjdFRhYkNvbnRlbnQodGFiKSB7XG4gICAgLy8g0J/RgNC+0YXQvtC00LjQvCDQv9C+INCy0YHQtdC8INGC0LDQsdCw0Lwg0Lgg0L/RgNC+0LLQtdGA0Y/QtdC8INC10YHRgtGMINC70Lgg0YMg0Y3Qu9C10LzQtdC90YLQsCDQutC70LDRgdGBLCDRgNCw0LLQvdGL0Lkg0LjQvNC10L3QuCDRgtCw0LHQsCjQv9C10YDQtdC80LXQvdC90L7QuSB0YWJOYW1lKS4g0JXRgdC70Lgg0LXRgdGC0YwsINGC0L4g0LTQvtCx0LDQstC70Y/QtdC8INC60LvQsNGB0YEg0LDQutGC0LjQstC90L7Qs9C+INGC0LDQsdCwLCDQtdGB0LvQuCDQvdC10YIsINGC0L4g0YPQtNCw0LvRj9C10Lwg0Y3RgtC+0YIg0LrQu9Cw0YHRgVxuICAgIHRhYkNvbnRlbnQuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgeyBjbGFzc0xpc3QgfSA9IGl0ZW07XG4gICAgICBjbGFzc0xpc3QuY29udGFpbnModGFiKVxuICAgICAgICA/IGNsYXNzTGlzdC5hZGQoJ3RhYnMtY29udGVudF9faXRlbS0tYWN0aXZlJylcbiAgICAgICAgOiBjbGFzc0xpc3QucmVtb3ZlKCd0YWJzLWNvbnRlbnRfX2l0ZW0tLWFjdGl2ZScpO1xuICAgIH0pO1xuICB9XG59O1xuXG50YWIoKTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNLEdBQUcsSUFBSUMsTUFBTSxDQUFDLGNBQWMsRUFBRTtFQUN4Q0MsUUFBUSxFQUFFLElBQUk7RUFDZEMsbUJBQW1CLEVBQUUsSUFBSTtFQUV6QkMsV0FBVyxFQUFFO0lBQ1gsR0FBRyxFQUFFO01BQ0hDLFlBQVksRUFBRSxFQUFFO01BQ2hCQyxhQUFhLEVBQUU7SUFDakIsQ0FBQztJQUNELEdBQUcsRUFBRTtNQUNIRCxZQUFZLEVBQUUsRUFBRTtNQUNoQkMsYUFBYSxFQUFFO0lBQ2pCLENBQUM7SUFDRCxHQUFHLEVBQUU7TUFDSEQsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLGFBQWEsRUFBRTtJQUNqQjtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBQ0YsSUFBTUMsT0FBTyxHQUFHLElBQUlOLE1BQU0sQ0FBQyxlQUFlLEVBQUU7RUFDMUNJLFlBQVksRUFBRSxFQUFFO0VBQ2hCRyxVQUFVLEVBQUU7SUFDVkMsTUFBTSxFQUFFLDBCQUEwQjtJQUNsQ0MsTUFBTSxFQUFFO0VBQ1YsQ0FBQztFQUNEQyxNQUFNLEVBQUU7SUFDTlgsTUFBTSxFQUFOQTtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsSUFBTVksT0FBTyxHQUFHLElBQUlYLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRTtFQUM1Q08sVUFBVSxFQUFFO0lBQ1ZDLE1BQU0sRUFBRSw2QkFBNkI7SUFDckNDLE1BQU0sRUFBRTtFQUNWLENBQUM7RUFDREcsVUFBVSxFQUFFO0lBQ1ZDLEVBQUUsRUFBRTtFQUNOLENBQUM7RUFDRFYsV0FBVyxFQUFFO0lBQ1gsR0FBRyxFQUFFO01BQ0hFLGFBQWEsRUFBRTtJQUNqQixDQUFDO0lBQ0QsR0FBRyxFQUFFO01BQ0hBLGFBQWEsRUFBRSxDQUFDO01BQ2hCRCxZQUFZLEVBQUU7SUFDaEIsQ0FBQztJQUNELEdBQUcsRUFBRTtNQUNIQyxhQUFhLEVBQUUsQ0FBQztNQUNoQkQsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDRCxJQUFJLEVBQUU7TUFDSkMsYUFBYSxFQUFFLENBQUM7TUFDaEJELFlBQVksRUFBRTtJQUNoQjtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsSUFBTVUsT0FBTyxHQUFHLElBQUlkLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRTtFQUM1Q2UsSUFBSSxFQUFFLElBQUk7RUFDVjtFQUNBQyxNQUFNLEVBQUUsV0FBVztFQUVuQkMsZUFBZSxFQUFFO0lBQ2ZDLE1BQU0sRUFBRSxDQUFDO0lBQ1RDLFlBQVksRUFBRSxLQUFLO0lBQ25CQyxRQUFRLEVBQUUsQ0FBQztJQUNYQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RDLFFBQVEsRUFBRTtJQUNSQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RwQixXQUFXLEVBQUU7SUFDWCxHQUFHLEVBQUU7TUFDSEUsYUFBYSxFQUFFLENBQUM7TUFDaEJELFlBQVksRUFBRTtJQUNoQixDQUFDO0lBQ0QsR0FBRyxFQUFFO01BQ0hDLGFBQWEsRUFBRSxDQUFDO01BQ2hCRCxZQUFZLEVBQUU7SUFDaEIsQ0FBQztJQUNELEdBQUcsRUFBRTtNQUNIQyxhQUFhLEVBQUUsQ0FBQztNQUNoQkQsWUFBWSxFQUFFO0lBQ2hCLENBQUM7SUFDRCxJQUFJLEVBQUU7TUFDSkEsWUFBWSxFQUFFLEVBQUU7TUFDaEJDLGFBQWEsRUFBRTtJQUNqQjtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBRUYsSUFBTW1CLFVBQVUsR0FBR0MsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUM7QUFDM0QsSUFBTUMsSUFBSSxHQUFHRixRQUFRLENBQUNHLGFBQWEsQ0FBQyxNQUFNLENBQUM7QUFDM0MsSUFBTUMsV0FBVyxHQUFHSixRQUFRLENBQUNDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQztBQUU5RCxJQUFJSSxNQUFNLEdBQUcsSUFBSTtBQUVqQixJQUFNQyxPQUFPLEdBQUcsR0FBRztBQUVuQixJQUFJUCxVQUFVLENBQUNRLE1BQU0sR0FBRyxDQUFDLEVBQUU7RUFBQSxJQUFBQyxLQUFBLFlBQUFBLE1BQUEsRUFDK0I7SUFDdEQsSUFBTUMsU0FBUyxHQUFHVixVQUFVLENBQUNXLEtBQUssQ0FBQztJQUNuQ0QsU0FBUyxDQUFDRSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO01BQ3pDLElBQU1DLFNBQVMsR0FBR0osU0FBUyxDQUFDSyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUNDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDO01BQ2pFLElBQU1DLFdBQVcsR0FBR2hCLFFBQVEsQ0FBQ2lCLGNBQWMsQ0FBQ0osU0FBUyxDQUFDO01BQ3RESyxTQUFTLENBQUNGLFdBQVcsQ0FBQztNQUN0QkosQ0FBQyxDQUFDTyxjQUFjLEVBQUU7SUFDcEIsQ0FBQyxDQUFDO0VBQ0osQ0FBQztFQVJELEtBQUssSUFBSVQsS0FBSyxHQUFHLENBQUMsRUFBRUEsS0FBSyxHQUFHWCxVQUFVLENBQUNRLE1BQU0sRUFBRUcsS0FBSyxFQUFFO0lBQUFGLEtBQUE7RUFBQTtBQVN4RDtBQUNBLElBQU1ZLGNBQWMsR0FBR3BCLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsY0FBYyxDQUFDO0FBQ2hFLElBQUltQixjQUFjLENBQUNiLE1BQU0sR0FBRyxDQUFDLEVBQUU7RUFBQSxJQUFBYyxNQUFBLFlBQUFBLE9BQUEsRUFDK0I7SUFDMUQsSUFBTWpDLEVBQUUsR0FBR2dDLGNBQWMsQ0FBQ1YsTUFBSyxDQUFDO0lBQ2hDdEIsRUFBRSxDQUFDdUIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFVBQUNDLENBQUMsRUFBSztNQUNsQ1UsVUFBVSxDQUFDbEMsRUFBRSxDQUFDbUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO01BQ2hDWCxDQUFDLENBQUNPLGNBQWMsRUFBRTtJQUNwQixDQUFDLENBQUM7RUFDSixDQUFDO0VBTkQsS0FBSyxJQUFJVCxNQUFLLEdBQUcsQ0FBQyxFQUFFQSxNQUFLLEdBQUdVLGNBQWMsQ0FBQ2IsTUFBTSxFQUFFRyxNQUFLLEVBQUU7SUFBQVcsTUFBQTtFQUFBO0FBTzVEO0FBRUEsU0FBU0gsU0FBU0EsQ0FBQ0YsV0FBVyxFQUFFO0VBQzlCLElBQUlBLFdBQVcsSUFBSVgsTUFBTSxFQUFFO0lBQ3pCLElBQU1tQixXQUFXLEdBQUd4QixRQUFRLENBQUNHLGFBQWEsQ0FBQyxhQUFhLENBQUM7SUFDekQsSUFBSXFCLFdBQVcsRUFBRTtNQUNmRixVQUFVLENBQUNFLFdBQVcsRUFBRSxLQUFLLENBQUM7SUFDaEMsQ0FBQyxNQUFNO01BQ0xDLFFBQVEsRUFBRTtJQUNaO0lBQ0FULFdBQVcsQ0FBQ1UsU0FBUyxDQUFDQyxHQUFHLENBQUMsTUFBTSxDQUFDO0lBQ2pDWCxXQUFXLENBQUNMLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDQyxDQUFDLEVBQUs7TUFDM0MsSUFBSSxDQUFDQSxDQUFDLENBQUNnQixNQUFNLENBQUNMLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1FBQ3hDRCxVQUFVLENBQUNWLENBQUMsQ0FBQ2dCLE1BQU0sQ0FBQ0wsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO01BQ3hDO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7QUFDRjtBQUVBLFNBQVNELFVBQVVBLENBQUNFLFdBQVcsRUFBbUI7RUFBQSxJQUFqQkssUUFBUSxHQUFBQyxTQUFBLENBQUF2QixNQUFBLFFBQUF1QixTQUFBLFFBQUFDLFNBQUEsR0FBQUQsU0FBQSxNQUFHLElBQUk7RUFDOUMsSUFBSXpCLE1BQU0sRUFBRTtJQUNWbUIsV0FBVyxDQUFDRSxTQUFTLENBQUNNLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDcEMsSUFBSUgsUUFBUSxFQUFFO01BQ1pJLFVBQVUsRUFBRTtJQUNkO0VBQ0Y7QUFDRjtBQUVBLFNBQVNSLFFBQVFBLENBQUEsRUFBRztFQUNsQixJQUFNUyxnQkFBZ0IsR0FBRyxFQUFFO0VBRTNCLElBQUk5QixXQUFXLENBQUNHLE1BQU0sR0FBRyxDQUFDLEVBQUU7SUFDMUIsS0FBSyxJQUFJRyxPQUFLLEdBQUcsQ0FBQyxFQUFFQSxPQUFLLEdBQUdOLFdBQVcsQ0FBQ0csTUFBTSxFQUFFRyxPQUFLLEVBQUUsRUFBRTtNQUN2RCxJQUFNdEIsRUFBRSxHQUFHZ0IsV0FBVyxDQUFDTSxPQUFLLENBQUM7TUFDN0J0QixFQUFFLENBQUMrQyxLQUFLLENBQUNDLFlBQVksR0FBR0YsZ0JBQWdCO0lBQzFDO0VBQ0Y7RUFDQWhDLElBQUksQ0FBQ2lDLEtBQUssQ0FBQ0MsWUFBWSxHQUFHRixnQkFBZ0I7RUFDMUNoQyxJQUFJLENBQUN3QixTQUFTLENBQUNDLEdBQUcsQ0FBQyxNQUFNLENBQUM7RUFFMUJ0QixNQUFNLEdBQUcsS0FBSztFQUNkZ0MsVUFBVSxDQUFDLFlBQU07SUFDZmhDLE1BQU0sR0FBRyxJQUFJO0VBQ2YsQ0FBQyxFQUFFQyxPQUFPLENBQUM7QUFDYjtBQUVBLFNBQVMyQixVQUFVQSxDQUFBLEVBQUc7RUFDcEJJLFVBQVUsQ0FBQyxZQUFNO0lBQ2YsSUFBSWpDLFdBQVcsQ0FBQ0csTUFBTSxHQUFHLENBQUMsRUFBRTtNQUMxQixLQUFLLElBQUlHLE9BQUssR0FBRyxDQUFDLEVBQUVBLE9BQUssR0FBR04sV0FBVyxDQUFDRyxNQUFNLEVBQUVHLE9BQUssRUFBRSxFQUFFO1FBQ3ZELElBQU10QixFQUFFLEdBQUdnQixXQUFXLENBQUNNLE9BQUssQ0FBQztRQUM3QnRCLEVBQUUsQ0FBQytDLEtBQUssQ0FBQ0MsWUFBWSxHQUFHLEtBQUs7TUFDL0I7SUFDRjtJQUNBbEMsSUFBSSxDQUFDaUMsS0FBSyxDQUFDQyxZQUFZLEdBQUcsS0FBSztJQUMvQmxDLElBQUksQ0FBQ3dCLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLE1BQU0sQ0FBQztFQUMvQixDQUFDLEVBQUUxQixPQUFPLENBQUM7RUFFWEQsTUFBTSxHQUFHLEtBQUs7RUFDZGdDLFVBQVUsQ0FBQyxZQUFNO0lBQ2ZoQyxNQUFNLEdBQUcsSUFBSTtFQUNmLENBQUMsRUFBRUMsT0FBTyxDQUFDO0FBQ2I7QUFFQU4sUUFBUSxDQUFDVyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0VBQzFDLElBQUlBLENBQUMsQ0FBQzBCLEtBQUssS0FBSyxFQUFFLEVBQUU7SUFDbEIsSUFBTWQsV0FBVyxHQUFHeEIsUUFBUSxDQUFDRyxhQUFhLENBQUMsYUFBYSxDQUFDO0lBQ3pEbUIsVUFBVSxDQUFDRSxXQUFXLENBQUM7RUFDekI7QUFDRixDQUFDLENBQUM7QUFFRixDQUFDLFlBQVk7RUFDWDtFQUNBLElBQUksQ0FBQ2UsT0FBTyxDQUFDQyxTQUFTLENBQUNqQixPQUFPLEVBQUU7SUFDOUI7SUFDQWdCLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDakIsT0FBTyxHQUFHLFVBQVVrQixHQUFHLEVBQUU7TUFDekMsSUFBSUMsSUFBSSxHQUFHLElBQUk7TUFDZixPQUFPQSxJQUFJLEVBQUU7UUFDWCxJQUFJQSxJQUFJLENBQUNDLE9BQU8sQ0FBQ0YsR0FBRyxDQUFDLEVBQUUsT0FBT0MsSUFBSTtRQUNsQ0EsSUFBSSxHQUFHQSxJQUFJLENBQUNFLGFBQWE7TUFDM0I7TUFDQSxPQUFPLElBQUk7SUFDYixDQUFDO0VBQ0g7QUFDRixDQUFDLEdBQUc7QUFFSixDQUFDLFlBQVk7RUFDWDtFQUNBLElBQUksQ0FBQ0wsT0FBTyxDQUFDQyxTQUFTLENBQUNHLE9BQU8sRUFBRTtJQUM5QjtJQUNBSixPQUFPLENBQUNDLFNBQVMsQ0FBQ0csT0FBTyxHQUN2QkosT0FBTyxDQUFDQyxTQUFTLENBQUNLLGVBQWUsSUFDakNOLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDTSxxQkFBcUIsSUFDdkNQLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDTyxrQkFBa0IsSUFDcENSLE9BQU8sQ0FBQ0MsU0FBUyxDQUFDUSxpQkFBaUI7RUFDdkM7QUFDRixDQUFDLEdBQUc7QUFFSixJQUFNQyxrQkFBa0IsR0FBRyxTQUFyQkEsa0JBQWtCQSxDQUFBLEVBQVM7RUFDL0IsSUFBTUMsWUFBWSxHQUFHbEQsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUM7RUFDeERpRCxZQUFZLENBQUNDLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUs7SUFDN0IsSUFBTUMsWUFBWSxHQUFHRCxJQUFJLENBQUNuRCxnQkFBZ0IsQ0FBQyxlQUFlLENBQUM7SUFDM0QsSUFBTXFELHVCQUF1QixHQUFHRixJQUFJLENBQUNqRCxhQUFhLENBQUMsc0JBQXNCLENBQUM7SUFDMUUsSUFBTW9ELGtCQUFrQixHQUFHSCxJQUFJLENBQUNuRCxnQkFBZ0IsQ0FBQyxlQUFlLENBQUM7SUFDakUsSUFBTXVELGlCQUFpQixHQUFHSixJQUFJLENBQUNqRCxhQUFhLENBQUMsY0FBYyxDQUFDO0lBQzVELElBQU1zRCxTQUFTLEdBQUd6RCxRQUFRLENBQUNHLGFBQWEsQ0FBQyxhQUFhLENBQUM7SUFDdkQsSUFBTXVELFNBQVMsR0FBRzFELFFBQVEsQ0FBQ0csYUFBYSxDQUFDLGFBQWEsQ0FBQztJQUN2RCxJQUFNd0QsU0FBUyxHQUFHM0QsUUFBUSxDQUFDRyxhQUFhLENBQUMsYUFBYSxDQUFDO0lBQ3ZELElBQU15RCxTQUFTLEdBQUc1RCxRQUFRLENBQUNHLGFBQWEsQ0FBQyxhQUFhLENBQUM7SUFDdkRrRCxZQUFZLENBQUNGLE9BQU8sQ0FBQyxVQUFDVSxLQUFLLEVBQUs7TUFDOUJBLEtBQUssQ0FBQ2xELGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDQyxDQUFDLEVBQUs7UUFDckN5QyxZQUFZLENBQUNGLE9BQU8sQ0FBQyxVQUFDVyxLQUFLLEVBQUs7VUFDOUJBLEtBQUssQ0FBQ3BDLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLHNCQUFzQixDQUFDO1VBQzlDcEIsQ0FBQyxDQUFDbUQsYUFBYSxDQUFDckMsU0FBUyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7UUFDdkQsQ0FBQyxDQUFDO01BQ0osQ0FBQyxDQUFDO0lBQ0osQ0FBQyxDQUFDO0lBQ0YsSUFBSXlCLElBQUksQ0FBQ1ksUUFBUSxDQUFDVix1QkFBdUIsQ0FBQyxFQUFFO01BQzFDQyxrQkFBa0IsQ0FBQ0osT0FBTyxDQUFDLFVBQUNjLEtBQUssRUFBSztRQUNwQ0EsS0FBSyxDQUFDdEQsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07VUFDcEM2QyxpQkFBaUIsQ0FBQzlCLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLHFCQUFxQixDQUFDO1VBQ3pENEIsU0FBUyxDQUFDekIsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE1BQU07VUFDaENQLFNBQVMsQ0FBQ3hCLEtBQUssQ0FBQytCLE9BQU8sR0FBRyxNQUFNO1VBQ2hDUixTQUFTLENBQUN2QixLQUFLLENBQUMrQixPQUFPLEdBQUcsTUFBTTtVQUNoQ1QsU0FBUyxDQUFDdEIsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE1BQU07UUFDbEMsQ0FBQyxDQUFDO01BQ0osQ0FBQyxDQUFDO01BQ0ZaLHVCQUF1QixDQUFDM0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07UUFDdEQ2QyxpQkFBaUIsQ0FBQzlCLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLHFCQUFxQixDQUFDO1FBQ3REaUMsU0FBUyxDQUFDekIsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE1BQU07UUFDaENQLFNBQVMsQ0FBQ3hCLEtBQUssQ0FBQytCLE9BQU8sR0FBRyxNQUFNO1FBQ2hDUixTQUFTLENBQUN2QixLQUFLLENBQUMrQixPQUFPLEdBQUcsTUFBTTtRQUNoQ1QsU0FBUyxDQUFDdEIsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE1BQU07TUFDbEMsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDLENBQUM7QUFDSixDQUFDO0FBRURqQixrQkFBa0IsRUFBRTtBQUVwQixJQUFNa0IsVUFBVSxHQUFHLElBQUlDLFNBQVMsQ0FBQztFQUMvQkMsSUFBSSxFQUFFckUsUUFBUSxDQUFDaUIsY0FBYyxDQUFDLFlBQVksQ0FBQztFQUMzQ3FELEtBQUssRUFBRTtJQUNMQyxJQUFJLEVBQUU7TUFDSkMsUUFBUSxFQUFFLFNBQUFBLFNBQUNDLEdBQUc7UUFBQSxPQUFNQSxHQUFHLEdBQUcsRUFBRSxHQUFHLGdCQUFnQjtNQUFBO0lBQ2pELENBQUM7SUFDREMsS0FBSyxFQUFFO01BQ0xGLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTSxDQUFDQSxHQUFHLEdBQUcsZ0JBQWdCLEdBQUcsRUFBRTtNQUFBO0lBQ2xEO0VBQ0Y7QUFDRixDQUFDLENBQUM7QUFFRk4sVUFBVSxDQUFDRSxJQUFJLENBQUNNLFFBQVEsR0FBRyxVQUFDQyxHQUFHLEVBQUs7RUFBQSxJQUFBQyxxQkFBQSxFQUFBQyxzQkFBQTtFQUNsQ0YsR0FBRyxDQUFDekQsY0FBYyxFQUFFO0VBQ3BCLElBQU00RCxNQUFNLEdBQUdaLFVBQVUsQ0FBQ2EsU0FBUyxFQUFFO0VBQ3JDLElBQU1DLGdCQUFnQixHQUFHakYsUUFBUSxDQUFDRyxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdEUsSUFBTStFLGlCQUFpQixHQUFHbEYsUUFBUSxDQUFDRyxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFDeEUsSUFBTWdGLEtBQUssR0FBR25GLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLHlCQUF5QixDQUFDO0VBQy9ELElBQUlnRSxVQUFVLGFBQVZBLFVBQVUsZ0JBQUFVLHFCQUFBLEdBQVZWLFVBQVUsQ0FBRWlCLGFBQWEsY0FBQVAscUJBQUEsZUFBekJBLHFCQUFBLENBQTJCTixJQUFJLEVBQUU7SUFBQSxJQUFBYyxzQkFBQTtJQUNuQ0osZ0JBQWdCLENBQUNLLFNBQVMsR0FBR25CLFVBQVUsYUFBVkEsVUFBVSx3QkFBQWtCLHNCQUFBLEdBQVZsQixVQUFVLENBQUVpQixhQUFhLGNBQUFDLHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJkLElBQUk7SUFDNURVLGdCQUFnQixDQUFDTSxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsQ0FBQztFQUN2RSxDQUFDLE1BQU07SUFDTHNELGdCQUFnQixDQUFDSyxTQUFTLEdBQUcsRUFBRTtJQUMvQkwsZ0JBQWdCLENBQUNNLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsY0FBYyxDQUFDO0VBQzFFO0VBQ0EsSUFBSW1DLFVBQVUsYUFBVkEsVUFBVSxnQkFBQVcsc0JBQUEsR0FBVlgsVUFBVSxDQUFFaUIsYUFBYSxjQUFBTixzQkFBQSxlQUF6QkEsc0JBQUEsQ0FBMkJKLEtBQUssRUFBRTtJQUFBLElBQUFjLHNCQUFBO0lBQ3BDTixpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHbkIsVUFBVSxhQUFWQSxVQUFVLHdCQUFBcUIsc0JBQUEsR0FBVnJCLFVBQVUsQ0FBRWlCLGFBQWEsY0FBQUksc0JBQUEsdUJBQXpCQSxzQkFBQSxDQUEyQmQsS0FBSztJQUM5RFEsaUJBQWlCLENBQUNLLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQ3hFLENBQUMsTUFBTTtJQUNMdUQsaUJBQWlCLENBQUNJLFNBQVMsR0FBRyxFQUFFO0lBQ2hDSixpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxjQUFjLENBQUM7RUFDM0U7RUFDQSxJQUFJK0MsTUFBTSxDQUFDUixJQUFJLElBQUlRLE1BQU0sQ0FBQ0wsS0FBSyxFQUFFO0lBQy9CUyxLQUFLLENBQUN6RCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztJQUM1Q21ELEtBQUssQ0FBQ00sa0JBQWtCLENBQUMvRCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztFQUM5RDtBQUNGLENBQUM7QUFFRHdDLFVBQVUsQ0FBQ0UsSUFBSSxDQUFDcUIsT0FBTyxHQUFHLFVBQUNkLEdBQUcsRUFBSztFQUNqQyxJQUFNZSxJQUFJLEdBQUd4QixVQUFVLENBQUN5QixLQUFLLEVBQUU7RUFDL0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxJQUFJLENBQUM7QUFDbkIsQ0FBQztBQUVELElBQU1JLFVBQVUsR0FBRyxJQUFJM0IsU0FBUyxDQUFDO0VBQy9CQyxJQUFJLEVBQUVyRSxRQUFRLENBQUNpQixjQUFjLENBQUMsWUFBWSxDQUFDO0VBQzNDcUQsS0FBSyxFQUFFO0lBQ0wwQixNQUFNLEVBQUU7TUFDTnhCLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTUEsR0FBRyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0I7TUFBQTtJQUNqRCxDQUFDO0lBQ0R3QixLQUFLLEVBQUU7TUFDTHpCLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTUEsR0FBRyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0I7TUFBQTtJQUNqRCxDQUFDO0lBQ0R5QixNQUFNLEVBQUU7TUFDTjFCLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTSxDQUFDQSxHQUFHLEdBQUcsZ0JBQWdCLEdBQUcsRUFBRTtNQUFBO0lBQ2xEO0VBQ0Y7QUFDRixDQUFDLENBQUM7QUFFRnNCLFVBQVUsQ0FBQzFCLElBQUksQ0FBQ00sUUFBUSxHQUFHLFVBQUNDLEdBQUcsRUFBSztFQUFBLElBQUF1QixxQkFBQSxFQUFBQyxzQkFBQSxFQUFBQyxzQkFBQTtFQUNsQ3pCLEdBQUcsQ0FBQ3pELGNBQWMsRUFBRTtFQUNwQixJQUFNNEQsTUFBTSxHQUFHZ0IsVUFBVSxDQUFDZixTQUFTLEVBQUU7RUFDckMsSUFBTUMsZ0JBQWdCLEdBQUdqRixRQUFRLENBQUNHLGFBQWEsQ0FBQyxxQkFBcUIsQ0FBQztFQUN0RSxJQUFNK0UsaUJBQWlCLEdBQUdsRixRQUFRLENBQUNHLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RSxJQUFNbUcsaUJBQWlCLEdBQUd0RyxRQUFRLENBQUNHLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RSxJQUFNZ0YsS0FBSyxHQUFHbkYsUUFBUSxDQUFDRyxhQUFhLENBQUMseUJBQXlCLENBQUM7RUFDL0QsSUFBSTRGLFVBQVUsYUFBVkEsVUFBVSxnQkFBQUkscUJBQUEsR0FBVkosVUFBVSxDQUFFWCxhQUFhLGNBQUFlLHFCQUFBLGVBQXpCQSxxQkFBQSxDQUEyQkYsS0FBSyxFQUFFO0lBQUEsSUFBQU0sc0JBQUE7SUFDcEN0QixnQkFBZ0IsQ0FBQ0ssU0FBUyxHQUFHUyxVQUFVLGFBQVZBLFVBQVUsd0JBQUFRLHNCQUFBLEdBQVZSLFVBQVUsQ0FBRVgsYUFBYSxjQUFBbUIsc0JBQUEsdUJBQXpCQSxzQkFBQSxDQUEyQk4sS0FBSztJQUM3RGhCLGdCQUFnQixDQUFDTSxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsQ0FBQztFQUN2RSxDQUFDLE1BQU07SUFDTHNELGdCQUFnQixDQUFDSyxTQUFTLEdBQUcsRUFBRTtJQUMvQkwsZ0JBQWdCLENBQUNNLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsY0FBYyxDQUFDO0VBQzFFO0VBQ0EsSUFBSStELFVBQVUsYUFBVkEsVUFBVSxnQkFBQUssc0JBQUEsR0FBVkwsVUFBVSxDQUFFWCxhQUFhLGNBQUFnQixzQkFBQSxlQUF6QkEsc0JBQUEsQ0FBMkJGLE1BQU0sRUFBRTtJQUFBLElBQUFNLHNCQUFBO0lBQ3JDdEIsaUJBQWlCLENBQUNJLFNBQVMsR0FBR1MsVUFBVSxhQUFWQSxVQUFVLHdCQUFBUyxzQkFBQSxHQUFWVCxVQUFVLENBQUVYLGFBQWEsY0FBQW9CLHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJOLE1BQU07SUFDL0RoQixpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0x1RCxpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHLEVBQUU7SUFDaENKLGlCQUFpQixDQUFDSyxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUkrRCxVQUFVLGFBQVZBLFVBQVUsZ0JBQUFNLHNCQUFBLEdBQVZOLFVBQVUsQ0FBRVgsYUFBYSxjQUFBaUIsc0JBQUEsZUFBekJBLHNCQUFBLENBQTJCTCxNQUFNLEVBQUU7SUFBQSxJQUFBUyxzQkFBQTtJQUNyQ0gsaUJBQWlCLENBQUNoQixTQUFTLEdBQUdTLFVBQVUsYUFBVkEsVUFBVSx3QkFBQVUsc0JBQUEsR0FBVlYsVUFBVSxDQUFFWCxhQUFhLGNBQUFxQixzQkFBQSx1QkFBekJBLHNCQUFBLENBQTJCVCxNQUFNO0lBQy9ETSxpQkFBaUIsQ0FBQ2Ysc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0wyRSxpQkFBaUIsQ0FBQ2hCLFNBQVMsR0FBRyxFQUFFO0lBQ2hDZ0IsaUJBQWlCLENBQUNmLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsY0FBYyxDQUFDO0VBQzNFO0VBQ0EsSUFBSStDLE1BQU0sQ0FBQ2tCLEtBQUssSUFBSWxCLE1BQU0sQ0FBQ21CLE1BQU0sSUFBSW5CLE1BQU0sQ0FBQ2lCLE1BQU0sRUFBRTtJQUNsRGIsS0FBSyxDQUFDekQsU0FBUyxDQUFDTSxNQUFNLENBQUMsb0JBQW9CLENBQUM7SUFDNUNtRCxLQUFLLENBQUNNLGtCQUFrQixDQUFDL0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7RUFDOUQ7QUFDRixDQUFDO0FBRURvRSxVQUFVLENBQUMxQixJQUFJLENBQUNxQixPQUFPLEdBQUcsVUFBQ2QsR0FBRyxFQUFLO0VBQ2pDLElBQU1lLElBQUksR0FBR0ksVUFBVSxDQUFDSCxLQUFLLEVBQUU7RUFDL0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxJQUFJLENBQUM7QUFDbkIsQ0FBQztBQUVELElBQU1lLFVBQVUsR0FBRyxJQUFJdEMsU0FBUyxDQUFDO0VBQy9CQyxJQUFJLEVBQUVyRSxRQUFRLENBQUNpQixjQUFjLENBQUMsWUFBWSxDQUFDO0VBQzNDcUQsS0FBSyxFQUFFO0lBQ0xxQyxLQUFLLEVBQUU7TUFDTG5DLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTUEsR0FBRyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0I7TUFBQTtJQUNqRCxDQUFDO0lBQ0RtQyxNQUFNLEVBQUU7TUFDTnBDLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTSxDQUFDQSxHQUFHLEdBQUcsZ0JBQWdCLEdBQUcsRUFBRTtNQUFBO0lBQ2xEO0VBQ0Y7QUFDRixDQUFDLENBQUM7QUFFRmlDLFVBQVUsQ0FBQ3JDLElBQUksQ0FBQ00sUUFBUSxHQUFHLFVBQUNDLEdBQUcsRUFBSztFQUFBLElBQUFpQyxxQkFBQSxFQUFBQyxzQkFBQTtFQUNsQ2xDLEdBQUcsQ0FBQ3pELGNBQWMsRUFBRTtFQUNwQixJQUFNNEQsTUFBTSxHQUFHMkIsVUFBVSxDQUFDMUIsU0FBUyxFQUFFO0VBQ3JDLElBQU1DLGdCQUFnQixHQUFHakYsUUFBUSxDQUFDRyxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdEUsSUFBTStFLGlCQUFpQixHQUFHbEYsUUFBUSxDQUFDRyxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFDeEUsSUFBTTRHLElBQUksR0FBRy9HLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLGNBQWMsQ0FBQztFQUNuRCxJQUFNNkcsYUFBYSxHQUFHRCxJQUFJLENBQUM1RyxhQUFhLENBQUMsb0JBQW9CLENBQUM7RUFDOUQsSUFBTThHLGFBQWEsR0FBR0YsSUFBSSxDQUFDNUcsYUFBYSxDQUFDLG9CQUFvQixDQUFDO0VBQzlELElBQU1nRixLQUFLLEdBQUduRixRQUFRLENBQUNHLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUM1RCxJQUFJdUcsVUFBVSxhQUFWQSxVQUFVLGdCQUFBRyxxQkFBQSxHQUFWSCxVQUFVLENBQUV0QixhQUFhLGNBQUF5QixxQkFBQSxlQUF6QkEscUJBQUEsQ0FBMkJGLEtBQUssRUFBRTtJQUFBLElBQUFPLHNCQUFBO0lBQ3BDakMsZ0JBQWdCLENBQUNLLFNBQVMsR0FBR29CLFVBQVUsYUFBVkEsVUFBVSx3QkFBQVEsc0JBQUEsR0FBVlIsVUFBVSxDQUFFdEIsYUFBYSxjQUFBOEIsc0JBQUEsdUJBQXpCQSxzQkFBQSxDQUEyQlAsS0FBSztJQUM3RDFCLGdCQUFnQixDQUFDTSxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsQ0FBQztFQUN2RSxDQUFDLE1BQU07SUFDTHNELGdCQUFnQixDQUFDSyxTQUFTLEdBQUcsRUFBRTtJQUMvQkwsZ0JBQWdCLENBQUNNLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsY0FBYyxDQUFDO0VBQzFFO0VBQ0EsSUFBSTBFLFVBQVUsYUFBVkEsVUFBVSxnQkFBQUksc0JBQUEsR0FBVkosVUFBVSxDQUFFdEIsYUFBYSxjQUFBMEIsc0JBQUEsZUFBekJBLHNCQUFBLENBQTJCRixNQUFNLEVBQUU7SUFBQSxJQUFBTyxzQkFBQTtJQUNyQ2pDLGlCQUFpQixDQUFDSSxTQUFTLEdBQUdvQixVQUFVLGFBQVZBLFVBQVUsd0JBQUFTLHNCQUFBLEdBQVZULFVBQVUsQ0FBRXRCLGFBQWEsY0FBQStCLHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJQLE1BQU07SUFDL0QxQixpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0x1RCxpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHLEVBQUU7SUFDaENKLGlCQUFpQixDQUFDSyxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUkrQyxNQUFNLENBQUM0QixLQUFLLElBQUk1QixNQUFNLENBQUM2QixNQUFNLEVBQUU7SUFDakN6QixLQUFLLENBQUN6RCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztJQUM1Q21ELEtBQUssQ0FBQ00sa0JBQWtCLENBQUMvRCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztJQUM1RHNGLGFBQWEsQ0FBQ3ZGLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLHNCQUFzQixDQUFDO0lBQ3REaUYsYUFBYSxDQUFDeEIsa0JBQWtCLENBQUMvRCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RTtBQUNGLENBQUM7QUFFRCtFLFVBQVUsQ0FBQ3JDLElBQUksQ0FBQ3FCLE9BQU8sR0FBRyxVQUFDZCxHQUFHLEVBQUs7RUFDakMsSUFBTWUsSUFBSSxHQUFHZSxVQUFVLENBQUNkLEtBQUssRUFBRTtFQUMvQkMsT0FBTyxDQUFDQyxHQUFHLENBQUNILElBQUksQ0FBQztBQUNuQixDQUFDO0FBRUQsSUFBTXlCLFVBQVUsR0FBRyxJQUFJaEQsU0FBUyxDQUFDO0VBQy9CQyxJQUFJLEVBQUVyRSxRQUFRLENBQUNpQixjQUFjLENBQUMsWUFBWSxDQUFDO0VBQzNDcUQsS0FBSyxFQUFFO0lBQ0wrQyxNQUFNLEVBQUU7TUFDTjdDLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTUEsR0FBRyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0I7TUFBQTtJQUNqRCxDQUFDO0lBQ0Q2QyxLQUFLLEVBQUU7TUFDTDlDLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTUEsR0FBRyxHQUFHLEVBQUUsR0FBRyxnQkFBZ0I7TUFBQTtJQUNqRCxDQUFDO0lBQ0Q4QyxNQUFNLEVBQUU7TUFDTi9DLFFBQVEsRUFBRSxTQUFBQSxTQUFDQyxHQUFHO1FBQUEsT0FBTSxDQUFDQSxHQUFHLEdBQUcsZ0JBQWdCLEdBQUcsRUFBRTtNQUFBO0lBQ2xEO0VBQ0Y7QUFDRixDQUFDLENBQUM7QUFFRjJDLFVBQVUsQ0FBQy9DLElBQUksQ0FBQ00sUUFBUSxHQUFHLFVBQUNDLEdBQUcsRUFBSztFQUFBLElBQUE0QyxxQkFBQSxFQUFBQyxzQkFBQSxFQUFBQyxzQkFBQTtFQUNsQzlDLEdBQUcsQ0FBQ3pELGNBQWMsRUFBRTtFQUNwQixJQUFNNEQsTUFBTSxHQUFHcUMsVUFBVSxDQUFDcEMsU0FBUyxFQUFFO0VBQ3JDLElBQU1DLGdCQUFnQixHQUFHakYsUUFBUSxDQUFDRyxhQUFhLENBQUMscUJBQXFCLENBQUM7RUFDdEUsSUFBTStFLGlCQUFpQixHQUFHbEYsUUFBUSxDQUFDRyxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFDeEUsSUFBTW1HLGlCQUFpQixHQUFHdEcsUUFBUSxDQUFDRyxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFDeEUsSUFBTTRHLElBQUksR0FBRy9HLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLGNBQWMsQ0FBQztFQUNuRCxJQUFNNkcsYUFBYSxHQUFHRCxJQUFJLENBQUM1RyxhQUFhLENBQUMsb0JBQW9CLENBQUM7RUFDOUQsSUFBTThHLGFBQWEsR0FBR0YsSUFBSSxDQUFDNUcsYUFBYSxDQUFDLG9CQUFvQixDQUFDO0VBQzlELElBQU1nRixLQUFLLEdBQUduRixRQUFRLENBQUNHLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUM1RCxJQUFJaUgsVUFBVSxhQUFWQSxVQUFVLGdCQUFBSSxxQkFBQSxHQUFWSixVQUFVLENBQUVoQyxhQUFhLGNBQUFvQyxxQkFBQSxlQUF6QkEscUJBQUEsQ0FBMkJGLEtBQUssRUFBRTtJQUFBLElBQUFLLHNCQUFBO0lBQ3BDMUMsZ0JBQWdCLENBQUNLLFNBQVMsR0FBRzhCLFVBQVUsYUFBVkEsVUFBVSx3QkFBQU8sc0JBQUEsR0FBVlAsVUFBVSxDQUFFaEMsYUFBYSxjQUFBdUMsc0JBQUEsdUJBQXpCQSxzQkFBQSxDQUEyQkwsS0FBSztJQUM3RHJDLGdCQUFnQixDQUFDTSxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLGNBQWMsQ0FBQztFQUN2RSxDQUFDLE1BQU07SUFDTHNELGdCQUFnQixDQUFDSyxTQUFTLEdBQUcsRUFBRTtJQUMvQkwsZ0JBQWdCLENBQUNNLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsY0FBYyxDQUFDO0VBQzFFO0VBQ0EsSUFBSW9GLFVBQVUsYUFBVkEsVUFBVSxnQkFBQUssc0JBQUEsR0FBVkwsVUFBVSxDQUFFaEMsYUFBYSxjQUFBcUMsc0JBQUEsZUFBekJBLHNCQUFBLENBQTJCRixNQUFNLEVBQUU7SUFBQSxJQUFBSyxzQkFBQTtJQUNyQzFDLGlCQUFpQixDQUFDSSxTQUFTLEdBQUc4QixVQUFVLGFBQVZBLFVBQVUsd0JBQUFRLHNCQUFBLEdBQVZSLFVBQVUsQ0FBRWhDLGFBQWEsY0FBQXdDLHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJMLE1BQU07SUFDL0RyQyxpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0x1RCxpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHLEVBQUU7SUFDaENKLGlCQUFpQixDQUFDSyxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUlvRixVQUFVLGFBQVZBLFVBQVUsZ0JBQUFNLHNCQUFBLEdBQVZOLFVBQVUsQ0FBRWhDLGFBQWEsY0FBQXNDLHNCQUFBLGVBQXpCQSxzQkFBQSxDQUEyQkwsTUFBTSxFQUFFO0lBQUEsSUFBQVEsc0JBQUE7SUFDckN2QixpQkFBaUIsQ0FBQ2hCLFNBQVMsR0FBRzhCLFVBQVUsYUFBVkEsVUFBVSx3QkFBQVMsc0JBQUEsR0FBVlQsVUFBVSxDQUFFaEMsYUFBYSxjQUFBeUMsc0JBQUEsdUJBQXpCQSxzQkFBQSxDQUEyQlIsTUFBTTtJQUMvRGYsaUJBQWlCLENBQUNmLHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQ3hFLENBQUMsTUFBTTtJQUNMMkUsaUJBQWlCLENBQUNoQixTQUFTLEdBQUcsRUFBRTtJQUNoQ2dCLGlCQUFpQixDQUFDZixzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUkrQyxNQUFNLENBQUN1QyxLQUFLLElBQUl2QyxNQUFNLENBQUN3QyxNQUFNLElBQUl4QyxNQUFNLENBQUNzQyxNQUFNLEVBQUU7SUFDbERsQyxLQUFLLENBQUN6RCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztJQUM1Q21ELEtBQUssQ0FBQ00sa0JBQWtCLENBQUMvRCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztJQUM1RHNGLGFBQWEsQ0FBQ3ZGLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLHNCQUFzQixDQUFDO0lBQ3REaUYsYUFBYSxDQUFDeEIsa0JBQWtCLENBQUMvRCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RTtBQUNGLENBQUM7QUFFRHlGLFVBQVUsQ0FBQy9DLElBQUksQ0FBQ3FCLE9BQU8sR0FBRyxVQUFDZCxHQUFHLEVBQUs7RUFDakMsSUFBTWUsSUFBSSxHQUFHeUIsVUFBVSxDQUFDeEIsS0FBSyxFQUFFO0VBQy9CQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0gsSUFBSSxDQUFDO0FBQ25CLENBQUM7QUFFRCxJQUFNbUMsVUFBVSxHQUFHLFNBQWJBLFVBQVVBLENBQUEsRUFBUztFQUN2QixJQUFNQyxJQUFJLEdBQUcvSCxRQUFRLENBQUNHLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztFQUNyRCxJQUFNNkgsYUFBYSxHQUFHRCxJQUFJLENBQUM1SCxhQUFhLENBQUMsa0JBQWtCLENBQUM7RUFDNUQsSUFBTThILG1CQUFtQixHQUFHRCxhQUFhLENBQUM3SCxhQUFhLENBQUMsU0FBUyxDQUFDO0VBQ2xFLElBQU0rSCxhQUFhLEdBQUdILElBQUksQ0FBQzVILGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQztFQUM1RDhILG1CQUFtQixDQUFDdEgsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07SUFDbERxSCxhQUFhLENBQUN0RyxTQUFTLENBQUNNLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQztJQUNwRGtHLGFBQWEsQ0FBQ3hHLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQixDQUFDO0VBQ25ELENBQUMsQ0FBQztBQUNKLENBQUM7QUFFRG1HLFVBQVUsRUFBRTtBQUVaLElBQU1LLGNBQWMsR0FBRyxTQUFqQkEsY0FBY0EsQ0FBQSxFQUFTO0VBQzNCLElBQU1DLFFBQVEsR0FBR3BJLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLGlCQUFpQixDQUFDO0VBQzFELElBQU1rSSxpQkFBaUIsR0FBR0QsUUFBUSxDQUFDakksYUFBYSxDQUFDLHNCQUFzQixDQUFDO0VBQ3hFLElBQU1tSSx1QkFBdUIsR0FBR0YsUUFBUSxDQUFDakksYUFBYSxDQUFDLFNBQVMsQ0FBQztFQUNqRSxJQUFNb0ksaUJBQWlCLEdBQUdILFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RSxJQUFNcUksa0JBQWtCLEdBQUdKLFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyw4QkFBOEIsQ0FBQztFQUNqRixJQUFNc0ksaUJBQWlCLEdBQUdMLFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyw2QkFBNkIsQ0FBQztFQUMvRSxJQUFNdUksZUFBZSxHQUFHTixRQUFRLENBQUNqSSxhQUFhLENBQUMsaUJBQWlCLENBQUM7RUFDakUsSUFBTXdJLGVBQWUsR0FBR1AsUUFBUSxDQUFDakksYUFBYSxDQUFDLGlCQUFpQixDQUFDO0VBRWpFcUksa0JBQWtCLENBQUM3SCxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtJQUNqRCtILGVBQWUsQ0FBQ3ZHLEtBQUssQ0FBQytCLE9BQU8sR0FBRyxNQUFNO0lBQ3RDeUUsZUFBZSxDQUFDeEcsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE9BQU87RUFDekMsQ0FBQyxDQUFDO0VBRUZ1RSxpQkFBaUIsQ0FBQzlILGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFNO0lBQ2hEK0gsZUFBZSxDQUFDdkcsS0FBSyxDQUFDK0IsT0FBTyxHQUFHLE9BQU87SUFDdkN5RSxlQUFlLENBQUN4RyxLQUFLLENBQUMrQixPQUFPLEdBQUcsTUFBTTtFQUN4QyxDQUFDLENBQUM7QUFDSixDQUFDO0FBRURpRSxjQUFjLEVBQUU7QUFFaEIsSUFBTVMsVUFBVSxHQUFHLElBQUl4RSxTQUFTLENBQUM7RUFDL0JDLElBQUksRUFBRXJFLFFBQVEsQ0FBQ2lCLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztFQUMvQ3FELEtBQUssRUFBRTtJQUNMdUUsTUFBTSxFQUFFO01BQ05yRSxRQUFRLEVBQUUsU0FBQUEsU0FBQ0MsR0FBRztRQUFBLE9BQU0sQ0FBQ0EsR0FBRyxHQUFHLGdCQUFnQixHQUFHLEVBQUU7TUFBQTtJQUNsRDtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBRUZtRSxVQUFVLENBQUN2RSxJQUFJLENBQUNNLFFBQVEsR0FBRyxVQUFDQyxHQUFHLEVBQUs7RUFBQSxJQUFBa0UscUJBQUE7RUFDbENsRSxHQUFHLENBQUN6RCxjQUFjLEVBQUU7RUFDcEIsSUFBTTRELE1BQU0sR0FBRzZELFVBQVUsQ0FBQzVELFNBQVMsRUFBRTtFQUNyQyxJQUFNRSxpQkFBaUIsR0FBR2xGLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLHNCQUFzQixDQUFDO0VBQ3hFLElBQU1pSSxRQUFRLEdBQUdwSSxRQUFRLENBQUNHLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztFQUMxRCxJQUFNa0ksaUJBQWlCLEdBQUdELFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RSxJQUFNbUksdUJBQXVCLEdBQUdGLFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyxTQUFTLENBQUM7RUFDakUsSUFBTW9JLGlCQUFpQixHQUFHSCxRQUFRLENBQUNqSSxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFFeEUsSUFBSXlJLFVBQVUsYUFBVkEsVUFBVSxnQkFBQUUscUJBQUEsR0FBVkYsVUFBVSxDQUFFeEQsYUFBYSxjQUFBMEQscUJBQUEsZUFBekJBLHFCQUFBLENBQTJCRCxNQUFNLEVBQUU7SUFBQSxJQUFBRSxzQkFBQTtJQUNyQzdELGlCQUFpQixDQUFDSSxTQUFTLEdBQUdzRCxVQUFVLGFBQVZBLFVBQVUsd0JBQUFHLHNCQUFBLEdBQVZILFVBQVUsQ0FBRXhELGFBQWEsY0FBQTJELHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJGLE1BQU07SUFDL0QzRCxpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0x1RCxpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHLEVBQUU7SUFDaENKLGlCQUFpQixDQUFDSyxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUkrQyxNQUFNLENBQUM4RCxNQUFNLEVBQUU7SUFDakJSLGlCQUFpQixDQUFDM0csU0FBUyxDQUFDTSxNQUFNLENBQUMsd0JBQXdCLENBQUM7SUFDNURxRyxpQkFBaUIsQ0FBQzVDLGtCQUFrQixDQUFDL0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsd0JBQXdCLENBQUM7RUFDOUU7QUFDRixDQUFDO0FBRURpSCxVQUFVLENBQUN2RSxJQUFJLENBQUNxQixPQUFPLEdBQUcsVUFBQ2QsR0FBRyxFQUFLO0VBQ2pDLElBQU1lLElBQUksR0FBR2lELFVBQVUsQ0FBQ2hELEtBQUssRUFBRTtFQUMvQkMsT0FBTyxDQUFDQyxHQUFHLENBQUNILElBQUksQ0FBQztBQUNuQixDQUFDO0FBRUQsSUFBTXFELFVBQVUsR0FBRyxJQUFJNUUsU0FBUyxDQUFDO0VBQy9CQyxJQUFJLEVBQUVyRSxRQUFRLENBQUNpQixjQUFjLENBQUMsZ0JBQWdCLENBQUM7RUFDL0NxRCxLQUFLLEVBQUU7SUFDTDJFLE1BQU0sRUFBRTtNQUNOekUsUUFBUSxFQUFFLFNBQUFBLFNBQUNDLEdBQUc7UUFBQSxPQUFNLENBQUNBLEdBQUcsR0FBRyxnQkFBZ0IsR0FBRyxFQUFFO01BQUE7SUFDbEQsQ0FBQztJQUNEeUUsS0FBSyxFQUFFO01BQ0wxRSxRQUFRLEVBQUUsU0FBQUEsU0FBQ0MsR0FBRztRQUFBLE9BQU0sQ0FBQ0EsR0FBRyxHQUFHLGdCQUFnQixHQUFHLEVBQUU7TUFBQTtJQUNsRDtFQUNGO0FBQ0YsQ0FBQyxDQUFDO0FBRUZ1RSxVQUFVLENBQUMzRSxJQUFJLENBQUNNLFFBQVEsR0FBRyxVQUFDQyxHQUFHLEVBQUs7RUFBQSxJQUFBdUUscUJBQUEsRUFBQUMsc0JBQUE7RUFDbEN4RSxHQUFHLENBQUN6RCxjQUFjLEVBQUU7RUFDcEIsSUFBTTRELE1BQU0sR0FBR2lFLFVBQVUsQ0FBQ2hFLFNBQVMsRUFBRTtFQUNyQyxJQUFNRSxpQkFBaUIsR0FBR2xGLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLHNCQUFzQixDQUFDO0VBQ3hFLElBQU1rSixnQkFBZ0IsR0FBR3JKLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLHFCQUFxQixDQUFDO0VBQ3RFLElBQU1pSSxRQUFRLEdBQUdwSSxRQUFRLENBQUNHLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQztFQUMxRCxJQUFNa0ksaUJBQWlCLEdBQUdELFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyxzQkFBc0IsQ0FBQztFQUN4RSxJQUFNbUksdUJBQXVCLEdBQUdGLFFBQVEsQ0FBQ2pJLGFBQWEsQ0FBQyxTQUFTLENBQUM7RUFDakUsSUFBTW9JLGlCQUFpQixHQUFHSCxRQUFRLENBQUNqSSxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFFeEUsSUFBSTZJLFVBQVUsYUFBVkEsVUFBVSxnQkFBQUcscUJBQUEsR0FBVkgsVUFBVSxDQUFFNUQsYUFBYSxjQUFBK0QscUJBQUEsZUFBekJBLHFCQUFBLENBQTJCRixNQUFNLEVBQUU7SUFBQSxJQUFBSyxzQkFBQTtJQUNyQ3BFLGlCQUFpQixDQUFDSSxTQUFTLEdBQUcwRCxVQUFVLGFBQVZBLFVBQVUsd0JBQUFNLHNCQUFBLEdBQVZOLFVBQVUsQ0FBRTVELGFBQWEsY0FBQWtFLHNCQUFBLHVCQUF6QkEsc0JBQUEsQ0FBMkJMLE1BQU07SUFDL0QvRCxpQkFBaUIsQ0FBQ0ssc0JBQXNCLENBQUM3RCxTQUFTLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUM7RUFDeEUsQ0FBQyxNQUFNO0lBQ0x1RCxpQkFBaUIsQ0FBQ0ksU0FBUyxHQUFHLEVBQUU7SUFDaENKLGlCQUFpQixDQUFDSyxzQkFBc0IsQ0FBQzdELFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGNBQWMsQ0FBQztFQUMzRTtFQUNBLElBQUlnSCxVQUFVLGFBQVZBLFVBQVUsZ0JBQUFJLHNCQUFBLEdBQVZKLFVBQVUsQ0FBRTVELGFBQWEsY0FBQWdFLHNCQUFBLGVBQXpCQSxzQkFBQSxDQUEyQkYsS0FBSyxFQUFFO0lBQUEsSUFBQUssc0JBQUE7SUFDcENGLGdCQUFnQixDQUFDL0QsU0FBUyxHQUFHMEQsVUFBVSxhQUFWQSxVQUFVLHdCQUFBTyxzQkFBQSxHQUFWUCxVQUFVLENBQUU1RCxhQUFhLGNBQUFtRSxzQkFBQSx1QkFBekJBLHNCQUFBLENBQTJCTCxLQUFLO0lBQzdERyxnQkFBZ0IsQ0FBQzlELHNCQUFzQixDQUFDN0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsY0FBYyxDQUFDO0VBQ3ZFLENBQUMsTUFBTTtJQUNMMEgsZ0JBQWdCLENBQUMvRCxTQUFTLEdBQUcsRUFBRTtJQUMvQitELGdCQUFnQixDQUFDOUQsc0JBQXNCLENBQUM3RCxTQUFTLENBQUNNLE1BQU0sQ0FBQyxjQUFjLENBQUM7RUFDMUU7RUFDQSxJQUFJK0MsTUFBTSxDQUFDa0UsTUFBTSxJQUFJbEUsTUFBTSxDQUFDbUUsS0FBSyxFQUFFO0lBQ2pDYixpQkFBaUIsQ0FBQzNHLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLHdCQUF3QixDQUFDO0lBQzVEcUcsaUJBQWlCLENBQUM1QyxrQkFBa0IsQ0FBQy9ELFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixDQUFDO0VBQzlFO0FBQ0YsQ0FBQztBQUVEaUgsVUFBVSxDQUFDdkUsSUFBSSxDQUFDcUIsT0FBTyxHQUFHLFVBQUNkLEdBQUcsRUFBSztFQUNqQyxJQUFNZSxJQUFJLEdBQUdpRCxVQUFVLENBQUNoRCxLQUFLLEVBQUU7RUFDL0JDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxJQUFJLENBQUM7QUFDbkIsQ0FBQztBQUVELElBQU02RCxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBQSxFQUFTO0VBQ3hCLElBQU16QyxJQUFJLEdBQUcvRyxRQUFRLENBQUNHLGFBQWEsQ0FBQyxjQUFjLENBQUM7RUFDbkQsSUFBTXNKLGFBQWEsR0FBRzFDLElBQUksQ0FBQzVHLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQztFQUM1RCxJQUFNdUosbUJBQW1CLEdBQUdELGFBQWEsQ0FBQ3RKLGFBQWEsQ0FBQyxTQUFTLENBQUM7RUFDbEUsSUFBTXdKLGFBQWEsR0FBRzVDLElBQUksQ0FBQzVHLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQztFQUM1RCxJQUFNNkcsYUFBYSxHQUFHRCxJQUFJLENBQUM1RyxhQUFhLENBQUMsb0JBQW9CLENBQUM7RUFDOUQsSUFBTThHLGFBQWEsR0FBR0YsSUFBSSxDQUFDNUcsYUFBYSxDQUFDLG9CQUFvQixDQUFDO0VBQzlEdUosbUJBQW1CLENBQUMvSSxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtJQUNsRDhJLGFBQWEsQ0FBQy9ILFNBQVMsQ0FBQ00sTUFBTSxDQUFDLG9CQUFvQixDQUFDO0lBQ3BEMkgsYUFBYSxDQUFDakksU0FBUyxDQUFDQyxHQUFHLENBQUMsb0JBQW9CLENBQUM7SUFDakRxRixhQUFhLENBQUN0RixTQUFTLENBQUNNLE1BQU0sQ0FBQyxzQkFBc0IsQ0FBQztJQUN0RGdGLGFBQWEsQ0FBQ3ZCLGtCQUFrQixDQUFDL0QsU0FBUyxDQUFDQyxHQUFHLENBQUMsc0JBQXNCLENBQUM7RUFDeEUsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUVENkgsV0FBVyxFQUFFO0FBRWIsSUFBTUksUUFBUSxHQUFHLFNBQVhBLFFBQVFBLENBQUEsRUFBUztFQUNyQixJQUFNQyxVQUFVLEdBQUc3SixRQUFRLENBQUNHLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQztFQUMvRCxJQUFNMkosWUFBWSxHQUFHOUosUUFBUSxDQUFDRyxhQUFhLENBQUMsc0JBQXNCLENBQUM7RUFDbkUsSUFBTTRKLFdBQVcsR0FBRy9KLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLHFCQUFxQixDQUFDO0VBQ2pFLElBQU02SixVQUFVLEdBQUdoSyxRQUFRLENBQUNHLGFBQWEsQ0FBQyxlQUFlLENBQUM7RUFDMUQsSUFBTThKLFlBQVksR0FBR2pLLFFBQVEsQ0FBQ0csYUFBYSxDQUFDLGlCQUFpQixDQUFDO0VBQzlELElBQU0rSixXQUFXLEdBQUdsSyxRQUFRLENBQUNHLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQztFQUM1RCxJQUFNZ0ssZUFBZSxHQUFHSCxVQUFVLENBQUM3SixhQUFhLENBQUMsZ0JBQWdCLENBQUM7RUFDbEUsSUFBTWlLLGlCQUFpQixHQUFHSCxZQUFZLENBQUM5SixhQUFhLENBQUMsZ0JBQWdCLENBQUM7RUFDdEUsSUFBTWtLLGdCQUFnQixHQUFHSCxXQUFXLENBQUMvSixhQUFhLENBQUMsZ0JBQWdCLENBQUM7RUFFcEUwSixVQUFVLENBQUNsSixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0lBQzFDQSxDQUFDLENBQUMwSixlQUFlLEVBQUU7SUFDbkJOLFVBQVUsQ0FBQ3RJLFNBQVMsQ0FBQzZJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUU3Q0osZUFBZSxDQUFDeEosZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07TUFDOUNxSixVQUFVLENBQUN0SSxTQUFTLENBQUNNLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUMvQyxDQUFDLENBQUM7SUFFRndJLE1BQU0sQ0FBQzdKLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxZQUFNO01BQ3JDcUosVUFBVSxDQUFDdEksU0FBUyxDQUFDTSxNQUFNLENBQUMsZ0JBQWdCLENBQUM7SUFDL0MsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBRUY4SCxZQUFZLENBQUNuSixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsVUFBQ0MsQ0FBQyxFQUFLO0lBQzVDQSxDQUFDLENBQUMwSixlQUFlLEVBQUU7SUFDbkJMLFlBQVksQ0FBQ3ZJLFNBQVMsQ0FBQzZJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUUvQ0gsaUJBQWlCLENBQUN6SixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtNQUNoRHNKLFlBQVksQ0FBQ3ZJLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGdCQUFnQixDQUFDO0lBQ2pELENBQUMsQ0FBQztJQUVGd0ksTUFBTSxDQUFDN0osZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07TUFDckNzSixZQUFZLENBQUN2SSxTQUFTLENBQUNNLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUNqRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7RUFFRitILFdBQVcsQ0FBQ3BKLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFDQyxDQUFDLEVBQUs7SUFDM0NBLENBQUMsQ0FBQzBKLGVBQWUsQ0FBQzFKLENBQUMsQ0FBQztJQUNwQnNKLFdBQVcsQ0FBQ3hJLFNBQVMsQ0FBQzZJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUU5Q0YsZ0JBQWdCLENBQUMxSixnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsWUFBTTtNQUMvQ3VKLFdBQVcsQ0FBQ3hJLFNBQVMsQ0FBQ00sTUFBTSxDQUFDLGdCQUFnQixDQUFDO0lBQ2hELENBQUMsQ0FBQztJQUVGd0ksTUFBTSxDQUFDN0osZ0JBQWdCLENBQUMsT0FBTyxFQUFFLFlBQU07TUFDckN1SixXQUFXLENBQUN4SSxTQUFTLENBQUNNLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQztJQUNoRCxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQ0SCxRQUFRLEVBQUU7QUFFVixDQUFDLFlBQVk7RUFDWCxJQUFJYSxPQUFPLEdBQUd6SyxRQUFRLENBQUNDLGdCQUFnQixDQUFDLFNBQVMsQ0FBQztFQUNsRCxJQUFJeUssS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ2ZGLE1BQU0sQ0FBQzdKLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxZQUFZO0lBQzVDLElBQUkrSixLQUFLLElBQUlELE9BQU8sQ0FBQ2xLLE1BQU0sRUFBRTtNQUMzQjtJQUNGO0lBQUMsSUFBQW9LLE1BQUEsWUFBQUEsT0FBQUMsQ0FBQSxFQUV3QztNQUN2QyxJQUFJQyxHQUFHLEdBQUdKLE9BQU8sQ0FBQ0csQ0FBQyxDQUFDLENBQUNFLHFCQUFxQixFQUFFLENBQUNDLEdBQUcsQ0FBQyxDQUFDO01BQ2xELElBQUlDLEdBQUcsR0FBR1IsTUFBTSxDQUFDUyxXQUFXLEdBQUcsRUFBRSxDQUFDLENBQUM7TUFDbkMsSUFBSUosR0FBRyxHQUFHRyxHQUFHLElBQUlQLE9BQU8sQ0FBQ0csQ0FBQyxDQUFDLENBQUNNLE9BQU8sQ0FBQ0MsSUFBSSxLQUFLLEdBQUcsRUFBRTtRQUNoRFYsT0FBTyxDQUFDRyxDQUFDLENBQUMsQ0FBQ00sT0FBTyxDQUFDQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDN0IsSUFBSUMsQ0FBQyxHQUFHLENBQUM7UUFDVFYsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUNULElBQUlXLElBQUcsR0FBR0MsV0FBVyxDQUFDLFlBQVk7VUFDaEM7VUFDQUYsQ0FBQyxHQUFHQSxDQUFDLEdBQUdHLElBQUksQ0FBQ0MsSUFBSSxDQUFDZixPQUFPLENBQUNHLENBQUMsQ0FBQyxDQUFDTSxPQUFPLENBQUNPLEVBQUUsR0FBRyxFQUFFLENBQUM7VUFDN0NoQixPQUFPLENBQUNHLENBQUMsQ0FBQyxDQUFDYyxTQUFTLEdBQUdOLENBQUM7VUFDeEIsSUFBSUEsQ0FBQyxHQUFHWCxPQUFPLENBQUNHLENBQUMsQ0FBQyxDQUFDTSxPQUFPLENBQUNPLEVBQUUsRUFBRTtZQUM3QjtZQUNBaEIsT0FBTyxDQUFDRyxDQUFDLENBQUMsQ0FBQ2MsU0FBUyxHQUFHakIsT0FBTyxDQUFDRyxDQUFDLENBQUMsQ0FBQ00sT0FBTyxDQUFDTyxFQUFFO1lBQzVDRSxhQUFhLENBQUNOLElBQUcsQ0FBQztVQUNwQjtRQUNGLENBQUMsRUFBRSxFQUFFLENBQUM7TUFDUjtJQUNGLENBQUM7SUFsQkQsS0FBSyxJQUFJVCxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdILE9BQU8sQ0FBQ2xLLE1BQU0sRUFBRXFLLENBQUMsRUFBRTtNQUFBRCxNQUFBLENBQUFDLENBQUE7SUFBQTtFQW1CekMsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxHQUFHO0FBRUosSUFBTWdCLEdBQUcsR0FBRyxTQUFOQSxHQUFHQSxDQUFBLEVBQWU7RUFDdEIsSUFBSUMsTUFBTSxHQUFHN0wsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxpQkFBaUIsQ0FBQztJQUFFO0lBQ3pENkwsVUFBVSxHQUFHOUwsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxxQkFBcUIsQ0FBQztJQUFFO0lBQy9EOEwsT0FBTyxDQUFDLENBQUM7O0VBRVg7RUFDQUYsTUFBTSxDQUFDMUksT0FBTyxDQUFDLFVBQUNDLElBQUksRUFBSztJQUN2QkEsSUFBSSxDQUFDekMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFcUwsWUFBWSxDQUFDO0VBQzlDLENBQUMsQ0FBQztFQUVGLFNBQVNBLFlBQVlBLENBQUEsRUFBRztJQUN0QkgsTUFBTSxDQUFDMUksT0FBTyxDQUFDLFVBQUNDLElBQUksRUFBSztNQUN2QjtNQUNBQSxJQUFJLENBQUMxQixTQUFTLENBQUNNLE1BQU0sQ0FBQyx3QkFBd0IsQ0FBQztJQUNqRCxDQUFDLENBQUM7SUFDRixJQUFJLENBQUNOLFNBQVMsQ0FBQ0MsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUMsQ0FBQztJQUM5Q29LLE9BQU8sR0FBRyxJQUFJLENBQUNqTCxZQUFZLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztJQUM5Q21MLGdCQUFnQixDQUFDRixPQUFPLENBQUMsQ0FBQyxDQUFDO0VBQzdCOztFQUVBLFNBQVNFLGdCQUFnQkEsQ0FBQ0wsR0FBRyxFQUFFO0lBQzdCO0lBQ0FFLFVBQVUsQ0FBQzNJLE9BQU8sQ0FBQyxVQUFDQyxJQUFJLEVBQUs7TUFDM0IsSUFBUTFCLFNBQVMsR0FBSzBCLElBQUksQ0FBbEIxQixTQUFTO01BQ2pCQSxTQUFTLENBQUNzQyxRQUFRLENBQUM0SCxHQUFHLENBQUMsR0FDbkJsSyxTQUFTLENBQUNDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQyxHQUMzQ0QsU0FBUyxDQUFDTSxNQUFNLENBQUMsNEJBQTRCLENBQUM7SUFDcEQsQ0FBQyxDQUFDO0VBQ0o7QUFDRixDQUFDO0FBRUQ0SixHQUFHLEVBQUUifQ==
